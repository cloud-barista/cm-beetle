{
    "swagger": "2.0",
    "info": {
        "description": "CM-Beetle REST API",
        "title": "CM-Beetle REST API",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/cloud-barista/cm-beetle/issues/new/choose"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "latest"
    },
    "host": "localhost:8056",
    "basePath": "/beetle",
    "paths": {
        "/httpVersion": {
            "get": {
                "description": "Checks and logs the HTTP version of the incoming request to the server console.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Check HTTP version of incoming request",
                "operationId": "CheckHTTPVersion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    }
                }
            }
        },
        "/migration/data": {
            "post": {
                "description": "Migrate data from source to target\n\n[Note]\n* Only relay mode is supported for now (both source and destination should be remote endpoints).\n* Supported methods: rsync, object storage\n\n[Note]\n* Examples(test result): https://github.com/cloud-barista/cm-beetle/blob/main/docs/test-results-data-migration.md\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Data (incubating)"
                ],
                "summary": "Migrate data from source to target",
                "operationId": "MigrateData",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "reqBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transx.DataMigrationModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/middleware/objectStorage": {
            "get": {
                "description": "Get the list of all object storages (buckets) in the specified cloud service provider and region\n\n[Note] Connection name format: `{csp}-{region}` (e.g., aws-ap-northeast-2)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Managed middleware (preview)"
                ],
                "summary": "List object storages (buckets)",
                "operationId": "ListObjectStorages",
                "parameters": [
                    {
                        "enum": [
                            "aws",
                            "alibaba"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Cloud service provider",
                        "name": "csp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Cloud region",
                        "name": "region",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of object storages",
                        "schema": {
                            "$ref": "#/definitions/tbclient.ListAllMyBucketsResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Migrate object storages to cloud based on recommendation results\n\n[Note] This API creates object storages (buckets) in the target cloud.\n- Input should be the output from RecommendObjectStorage API\n- Connection name format: `{csp}-{region}` (e.g., aws-ap-northeast-2)\n\n[Note]\n* Examples(test result): https://github.com/cloud-barista/cm-beetle/blob/main/docs/test-results-data-migration.md\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Managed middleware (preview)"
                ],
                "summary": "Migrate object storages to cloud",
                "operationId": "MigrateObjectStorage",
                "parameters": [
                    {
                        "description": "Object storage migration request (use RecommendObjectStorage response)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateObjectStorageRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Object storages created successfully"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/middleware/objectStorage/{objectStorageName}": {
            "get": {
                "description": "Get details of a specific object storage (bucket)\n\n[Note] Connection name format: `{csp}-{region}` (e.g., aws-ap-northeast-2)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Managed middleware (preview)"
                ],
                "summary": "Get object storage (bucket) details",
                "operationId": "GetObjectStorage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Object Storage Name (bucket name)",
                        "name": "objectStorageName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "aws",
                            "alibaba"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Cloud service provider",
                        "name": "csp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Cloud region",
                        "name": "region",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object storage details",
                        "schema": {
                            "$ref": "#/definitions/tbclient.ListBucketResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Object storage not found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific object storage (bucket)\n\n[Note]\n- Connection name format: `{csp}-{region}` (e.g., aws-ap-northeast-2)\n- The bucket must be empty before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Managed middleware (preview)"
                ],
                "summary": "Delete object storage (bucket)",
                "operationId": "DeleteObjectStorage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Object Storage Name (bucket name)",
                        "name": "objectStorageName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "aws",
                            "alibaba"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Cloud service provider",
                        "name": "csp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Cloud region",
                        "name": "region",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Object storage deleted successfully"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Object storage not found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            },
            "head": {
                "description": "Check if a specific object storage (bucket) exists\n\n[Note]\n- Connection name format: `{csp}-{region}` (e.g., aws-ap-northeast-2)\n- Returns 200 OK if the bucket exists, 404 Not Found if it doesn't exist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Managed middleware (preview)"
                ],
                "summary": "Check object storage (bucket) existence",
                "operationId": "ExistObjectStorage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Object Storage Name (bucket name)",
                        "name": "objectStorageName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "aws",
                            "alibaba"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Cloud service provider",
                        "name": "csp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Cloud region",
                        "name": "region",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Object storage exists"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Object storage not found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/mci": {
            "get": {
                "description": "Get the migrated multi-cloud infrastructure (MCI)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Get the migrated multi-cloud infrastructure (MCI)",
                "operationId": "ListInfra",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option for getting the migrated multi-cloud infrastructure",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The ID list of The migrated multi-cloud infrastructure (MCI)",
                        "schema": {
                            "$ref": "#/definitions/cloudmodel.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Migrate an infrastructure to the multi-cloud infrastructure (MCI) with defaults.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Migrate an infrastructure to the multi-cloud infrastructure (MCI) with defaults",
                "operationId": "MigrateInfra",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Specify the information for the targeted mulci-cloud infrastructure (MCI)",
                        "name": "mciInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated to the multi-cloud infrastructure",
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/mci/{mciId}": {
            "get": {
                "description": "Get the migrated multi-cloud infrastructure (MCI)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Get the migrated multi-cloud infrastructure (MCI)",
                "operationId": "GetInfra",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mmci01",
                        "description": "Migrated Multi-Cloud Infrastructure (MCI) ID",
                        "name": "mciId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The migrated multi-cloud infrastructure (MCI) information",
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the migrated mult-cloud infrastructure (MCI)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Delete the migrated mult-cloud infrastructure (MCI)",
                "operationId": "DeleteInfra",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mmci01",
                        "description": "Migrated Multi-Cloud Infrastructure (MCI) ID",
                        "name": "mciId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "terminate",
                            "force"
                        ],
                        "type": "string",
                        "default": "terminate",
                        "description": "Option for deletion",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of deleting the migrated multi-cloud infrastructure (MCI)",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/mciWithDefaults": {
            "post": {
                "description": "Migrate an infrastructure to the multi-cloud infrastructure (MCI) with defaults.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Migrate an infrastructure to the multi-cloud infrastructure (MCI) with defaults",
                "operationId": "MigrateInfraWithDefaults",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Specify the information for the targeted mulci-cloud infrastructure (MCI)",
                        "name": "mciInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraWithDefaultsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated to the multi-cloud infrastructure",
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraWithDefaultsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/securityGroup": {
            "get": {
                "description": "Get the list of all migrated security groups in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "List all migrated security groups",
                "operationId": "ListMigratedSecurityGroups",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: systemLabel)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: Registered from CSP resource)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/resource.RestGetAllSecurityGroupResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/model.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new migrated security group in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Create a migrated security group",
                "operationId": "CreateMigratedSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: [required params for register] connectionName, name, vNetId, cspResourceId",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "description": "Details for an securityGroup object",
                        "name": "securityGroupReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SecurityGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SecurityGroupInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete multiple migrated security groups in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Delete multiple migrated security groups",
                "operationId": "DeleteMigratedSecurityGroups",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Delete resources containing matched ID-substring only",
                        "name": "match",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.IdList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/securityGroup/{sgId}": {
            "get": {
                "description": "Get details of a specific migrated security group in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Get a specific migrated security group",
                "operationId": "GetMigratedSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mig-sg-01",
                        "description": "Security Group ID",
                        "name": "sgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SecurityGroupInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific migrated security group in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Delete a migrated security group",
                "operationId": "DeleteMigratedSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mig-sg-01",
                        "description": "Security Group ID",
                        "name": "sgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/sshKey": {
            "get": {
                "description": "Get the list of all migrated SSH keys in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "List all migrated SSH keys",
                "operationId": "ListMigratedSSHKeys",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: systemLabel)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: Registered from CSP resource)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/resource.RestGetAllSshKeyResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/model.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new migrated SSH key in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Create a migrated SSH key",
                "operationId": "CreateMigratedSSHKey",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: [required params for register] connectionName, name, cspKeyId",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "description": "Details for an SSH key object",
                        "name": "sshKeyReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SshKeyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SshKeyInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/sshKey/{sshKeyId}": {
            "get": {
                "description": "Get details of a specific migrated SSH key in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Get a specific migrated SSH key",
                "operationId": "GetMigratedSSHKey",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mig-sshkey-01",
                        "description": "SSH Key ID",
                        "name": "sshKeyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SshKeyInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific migrated SSH key in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Delete a migrated SSH key",
                "operationId": "DeleteMigratedSSHKey",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mig-sshkey-01",
                        "description": "SSH Key ID",
                        "name": "sshKeyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/vNet": {
            "get": {
                "description": "Get the list of all migrated virtual networks in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "List all migrated virtual networks",
                "operationId": "ListMigratedVNets",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/resource.RestGetAllVNetResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/model.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new migrated virtual network in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Create a migrated virtual network",
                "operationId": "CreateVNet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Virtual Network creation request",
                        "name": "vNetReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.VNetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VNetInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/vNet/{vNetId}": {
            "get": {
                "description": "Get details of a specific virtual network in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Get a specific migrated virtual network",
                "operationId": "GetMigratedVNet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mig-vnet-01",
                        "description": "Virtual Network ID",
                        "name": "vNetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VNetInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific migrated virtual network in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Delete a migrated virtual network",
                "operationId": "DeleteMigratedVNet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mig-vnet-01",
                        "description": "Virtual Network ID",
                        "name": "vNetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "withsubnets",
                            "refine",
                            "force"
                        ],
                        "type": "string",
                        "description": "Action",
                        "name": "action",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "description": "Check Beetle is ready",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Check Beetle is ready",
                "operationId": "GetReadyz",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    }
                }
            }
        },
        "/recommendation/containerInfra": {
            "post": {
                "description": "[DEPRECATED] This endpoint is deprecated. Use /recommendation/k8sCluster and /recommendation/k8sNodeGroup instead.\n\n[Note] `desiredProvider` and `desiredRegion` are required.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Infrastructure"
                ],
                "summary": "(Deprecated) Recommend an appropriate container infrastructure for cloud migration",
                "operationId": "RecommendContainerInfra",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Specify the source container infrastructure",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "alibaba",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deprecated endpoint notice",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/k8sControlPlane": {
            "post": {
                "description": "Get recommendation for K8s control plane based on honeybee source cluster data\nReturns configuration that can be directly used with cb-tumblebug k8sClusterDynamic API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] K8s Cluster (prototype)"
                ],
                "summary": "Recommend K8s control plane configuration",
                "operationId": "RecommendK8sControlPlane",
                "parameters": [
                    {
                        "description": "Source cluster information from honeybee",
                        "name": "UserK8sInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/recommendation.KubernetesInfoList"
                        }
                    },
                    {
                        "enum": [
                            "aws"
                        ],
                        "type": "string",
                        "description": "Provider (e.g., aws)",
                        "name": "desiredProvider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "K8s control plane recommendation (ready for cb-tumblebug API)",
                        "schema": {
                            "$ref": "#/definitions/model.K8sClusterDynamicReq"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/k8sNodeGroup": {
            "post": {
                "description": "Get recommendation for K8s worker node group based on honeybee source cluster data\nReturns configuration that can be directly used with cb-tumblebug k8sNodeGroupDynamic API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] K8s Cluster (prototype)"
                ],
                "summary": "Recommend K8s worker node group configuration",
                "operationId": "RecommendK8sNodeGroup",
                "parameters": [
                    {
                        "description": "Source cluster information from honeybee",
                        "name": "UserK8sInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/recommendation.KubernetesInfoList"
                        }
                    },
                    {
                        "enum": [
                            "aws"
                        ],
                        "type": "string",
                        "description": "Provider (e.g., aws)",
                        "name": "desiredProvider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "K8s worker node group recommendation (ready for cb-tumblebug API)",
                        "schema": {
                            "$ref": "#/definitions/model.K8sNodeGroupReq"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/mci": {
            "post": {
                "description": "Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) for cloud migration\n\n[Note] `desiredCsp` and `desiredRegion` are required.\n- `desiredCsp` and `desiredRegion` can set on the query parameter or the request body.\n\n- If desiredCsp and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Infrastructure"
                ],
                "summary": "Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) for cloud migration",
                "operationId": "RecommendVMInfra",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "alibaba",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredCsp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended infrastructure",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/mciWithDefaults": {
            "post": {
                "description": "Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) with defaults for cloud migration\n\n[Note] `desiredCsp` and `desiredRegion` are required.\n- `desiredCsp` and `desiredRegion` can set on the query parameter or the request body.\n\n- If desiredCsp and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Infrastructure"
                ],
                "summary": "(To be updated) Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) with defaults for cloud migration",
                "operationId": "RecommendVMInfraWithDefaults",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraWithDefaultsRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "alibaba",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredCsp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended infrastructure",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraWithDefaultsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/middleware/objectStorage": {
            "post": {
                "description": "Recommend an appropriate object storage for cloud migration\n\n[Note] `desiredCsp` and `desiredRegion` are required.\n- `desiredCsp` and `desiredRegion` can set on the query parameter or the request body.\n\n- If desiredCsp and desiredRegion are set on request body, the values in the query parameter will be ignored.\n\n[Warning] the recommended bucket name may be globally unique.\n- Beetle supports adding a suffix based on the existing bucket name to ensure uniqueness.\n- Suppose that the existing bucket name is unique enough.\n- Generate a suffix based on the existing bucket name.\n- e.g., \"my-bucket\" -\u003e SHA256 hash -\u003e base64 URL-safe encoding (6 bytes) -\u003e lowercase -\u003e \"my-bucket-{suffix}\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Managed middleware (preview)"
                ],
                "summary": "Recommend an object storage for cloud migration",
                "operationId": "RecommendObjectStorage",
                "parameters": [
                    {
                        "description": "Specify the your object storage to be migrated",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendObjectStorageRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "alibaba",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "CSP (e.g., aws, azure, gcp)",
                        "name": "desiredCsp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended object storage",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendObjectStorageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/resources/securityGroups": {
            "post": {
                "description": "Recommend an appropriate security group for cloud migration\n\n[Note] `desiredProvider` and `desiredRegion` are required.\n- `desiredProvider` and `desiredRegion` can set on the query parameter or the request body.\n\n- If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Resources for VM infrastructure"
                ],
                "summary": "Recommend an appropriate security group for cloud migration",
                "operationId": "RecommendSecurityGroups",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "alibaba",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended security groups",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendSecurityGroupResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/resources/vNet": {
            "post": {
                "description": "Recommend an appropriate virtual network for cloud migration\n\n[Note] `desiredProvider` and `desiredRegion` are required.\n- `desiredProvider` and `desiredRegion` can set on the query parameter or the request body.\n\n- If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Resources for VM infrastructure"
                ],
                "summary": "Recommend an appropriate virtual network for cloud migration",
                "operationId": "RecommendVNet",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "alibaba",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended vNet",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVNetResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/resources/vmOsImages": {
            "post": {
                "description": "Recommend an appropriate OS image for cloud migration\n\n[Note] `desiredProvider` and `desiredRegion` are required.\n- `desiredProvider` and `desiredRegion` can set on the query parameter or the request body.\n\n- If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Resources for VM infrastructure"
                ],
                "summary": "Recommend an appropriate OS image for cloud migration",
                "operationId": "RecommendVmOsImages",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "alibaba",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended VM OS images",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmOsImageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/resources/vmSpecs": {
            "post": {
                "description": "Recommend an appropriate VM specification for cloud migration\n\n[Note] `desiredProvider` and `desiredRegion` are required.\n- `desiredProvider` and `desiredRegion` can set on the query parameter or the request body.\n\n- If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.\n- If `targetMachineId` is provided, only that specific machine will be processed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Resources for VM infrastructure"
                ],
                "summary": "Recommend an appropriate VM specification for cloud migration",
                "operationId": "RecommendVmSpecs",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "alibaba",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Target Machine ID to focus recommendation on (optional)",
                        "name": "targetMachineId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended VM specifications",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmSpecResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/test/tracing": {
            "get": {
                "description": "Test tracing to Tumblebug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test] Utility"
                ],
                "summary": "Test tracing to Tumblebug",
                "operationId": "TestTracing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cloudmodel.CloudProperty": {
            "type": "object",
            "properties": {
                "csp": {
                    "type": "string",
                    "example": "aws"
                },
                "region": {
                    "type": "string",
                    "example": "ap-northeast-2"
                }
            }
        },
        "cloudmodel.CommandExecutionStatus": {
            "type": "string",
            "enum": [
                "Queued",
                "Handling",
                "Completed",
                "Failed",
                "Timeout"
            ],
            "x-enum-varnames": [
                "CommandStatusQueued",
                "CommandStatusHandling",
                "CommandStatusCompleted",
                "CommandStatusFailed",
                "CommandStatusTimeout"
            ]
        },
        "cloudmodel.CommandStatusInfo": {
            "type": "object",
            "properties": {
                "commandExecuted": {
                    "description": "CommandExecuted is the actual SSH command executed on the VM (may be adjusted)",
                    "type": "string",
                    "example": "ls -la"
                },
                "commandRequested": {
                    "description": "CommandRequested is the original command as requested by the user",
                    "type": "string",
                    "example": "ls -la"
                },
                "completedTime": {
                    "description": "CompletedTime is when the command execution completed (success or failure)",
                    "type": "string",
                    "example": "2024-01-15 10:30:05"
                },
                "elapsedTime": {
                    "description": "ElapsedTime is the duration of command execution in milliseconds",
                    "type": "integer",
                    "example": 5000
                },
                "errorMessage": {
                    "description": "ErrorMessage contains error details if the execution failed",
                    "type": "string",
                    "example": "SSH connection failed"
                },
                "index": {
                    "description": "Index is sequential identifier for this command execution (1, 2, 3, ...)",
                    "type": "integer",
                    "example": 1
                },
                "resultSummary": {
                    "description": "ResultSummary provides a brief summary of the execution result",
                    "type": "string",
                    "example": "Command executed successfully"
                },
                "startedTime": {
                    "description": "StartedTime is when the command execution started",
                    "type": "string",
                    "example": "2024-01-15 10:30:00"
                },
                "status": {
                    "description": "Status represents the current status of the command execution",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.CommandExecutionStatus"
                        }
                    ],
                    "example": "Completed"
                },
                "stderr": {
                    "description": "Stderr contains the standard error from command execution (truncated for history)",
                    "type": "string",
                    "example": ""
                },
                "stdout": {
                    "description": "Stdout contains the standard output from command execution (truncated for history)",
                    "type": "string",
                    "example": "total 8\ndrwxr-xr-x 2 user user 4096 Jan 15 10:30 ."
                },
                "xRequestId": {
                    "description": "XRequestId is the request ID from X-Request-ID header when the command was executed",
                    "type": "string",
                    "example": "req-12345678-abcd-1234-efgh-123456789012"
                }
            }
        },
        "cloudmodel.ConnConfig": {
            "type": "object",
            "properties": {
                "configName": {
                    "type": "string"
                },
                "credentialHolder": {
                    "type": "string"
                },
                "credentialName": {
                    "type": "string"
                },
                "driverName": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "regionDetail": {
                    "$ref": "#/definitions/cloudmodel.RegionDetail"
                },
                "regionRepresentative": {
                    "type": "boolean"
                },
                "regionZoneInfo": {
                    "$ref": "#/definitions/cloudmodel.RegionZoneInfo"
                },
                "regionZoneInfoName": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "cloudmodel.CreateSubGroupDynamicReq": {
            "type": "object",
            "required": [
                "imageId",
                "specId"
            ],
            "properties": {
                "connectionName": {
                    "description": "if ConnectionName is given, the VM tries to use associtated credential.\nif not, it will use predefined ConnectionName in Spec objects",
                    "type": "string",
                    "example": "aws-ap-northeast-2"
                },
                "description": {
                    "type": "string",
                    "example": "Created via CB-Tumblebug"
                },
                "imageId": {
                    "description": "ImageId is field for id of a image in common namespace",
                    "type": "string",
                    "example": "ami-01f71f215b23ba262"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "\"env\"": "\"test\"}",
                        "{\"role\"": "\"worker\""
                    }
                },
                "name": {
                    "description": "SubGroup name, actual VM name will be generated with -N postfix.",
                    "type": "string",
                    "example": "g1"
                },
                "rootDiskSize": {
                    "description": "\"default\", Integer (GB): [\"50\", ..., \"1000\"]",
                    "type": "string",
                    "default": "default",
                    "example": "50"
                },
                "rootDiskType": {
                    "description": "\"\", \"default\", \"TYPE1\", AWS: [\"standard\", \"gp2\", \"gp3\"], Azure: [\"PremiumSSD\", \"StandardSSD\", \"StandardHDD\"], GCP: [\"pd-standard\", \"pd-balanced\", \"pd-ssd\", \"pd-extreme\"], ALIBABA: [\"cloud_efficiency\", \"cloud\", \"cloud_essd\"], TENCENT: [\"CLOUD_PREMIUM\", \"CLOUD_SSD\"]",
                    "type": "string",
                    "default": "default",
                    "example": "gp3"
                },
                "specId": {
                    "description": "SpecId is field for id of a spec in common namespace",
                    "type": "string",
                    "example": "aws+ap-northeast-2+t3.nano"
                },
                "subGroupSize": {
                    "description": "if subGroupSize is (not empty) \u0026\u0026 (\u003e 0), subGroup will be generated. VMs will be created accordingly.",
                    "type": "string",
                    "default": "1",
                    "example": "3"
                },
                "vmUserPassword": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "cloudmodel.CreateSubGroupReq": {
            "type": "object",
            "required": [
                "connectionName",
                "imageId",
                "name",
                "securityGroupIds",
                "specId",
                "sshKeyId",
                "subnetId",
                "vNetId"
            ],
            "properties": {
                "connectionName": {
                    "type": "string",
                    "example": "testcloud01-seoul"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP (required for option=register)",
                    "type": "string",
                    "example": "i-014fa6ede6ada0b2c"
                },
                "dataDiskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "imageId": {
                    "description": "ImageType        string   `json:\"imageType\"`",
                    "type": "string"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "SubGroup name of VMs. Actual VM name will be generated with -N postfix.",
                    "type": "string",
                    "example": "g1-1"
                },
                "rootDiskSize": {
                    "description": "\"default\", Integer (GB): [\"50\", ..., \"1000\"]",
                    "type": "string",
                    "example": "default, 30, 42, ..."
                },
                "rootDiskType": {
                    "description": "\"\", \"default\", \"TYPE1\", AWS: [\"standard\", \"gp2\", \"gp3\"], Azure: [\"PremiumSSD\", \"StandardSSD\", \"StandardHDD\"], GCP: [\"pd-standard\", \"pd-balanced\", \"pd-ssd\", \"pd-extreme\"], ALIBABA: [\"cloud_efficiency\", \"cloud\", \"cloud_ssd\"], TENCENT: [\"CLOUD_PREMIUM\", \"CLOUD_SSD\"]",
                    "type": "string",
                    "example": "default, TYPE1, ..."
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specId": {
                    "type": "string"
                },
                "sshKeyId": {
                    "type": "string"
                },
                "subGroupSize": {
                    "description": "if subGroupSize is (not empty) \u0026\u0026 (\u003e 0), subGroup will be generated. VMs will be created accordingly.",
                    "type": "string",
                    "example": "3"
                },
                "subnetId": {
                    "type": "string"
                },
                "vNetId": {
                    "type": "string"
                },
                "vmUserName": {
                    "type": "string"
                },
                "vmUserPassword": {
                    "type": "string"
                }
            }
        },
        "cloudmodel.FirewallRuleReq": {
            "type": "object",
            "required": [
                "Direction",
                "Protocol"
            ],
            "properties": {
                "CIDR": {
                    "description": "CIDR is the allowed IP range (e.g. 0.0.0.0/0, 10.0.0/8)",
                    "type": "string",
                    "example": "0.0.0.0/0"
                },
                "Direction": {
                    "description": "Direction is the direction of the rule (inbound or outbound)",
                    "type": "string",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "example": "inbound"
                },
                "Ports": {
                    "description": "Ports is to get multiple ports or port ranges as a string (e.g. \"22,900-1000,2000-3000\")\nThis allows flexibility in specifying single ports or ranges in a comma-separated format.\nThis field is used to handle both single ports and port ranges in a unified way.\nIt can accept a single port (e.g. \"22\"), a range (e.g. \"900-1000\"), or multiple ports/ranges (e.g. \"22,900-1000,2000-3000\").",
                    "type": "string",
                    "example": "22,900-1000,2000-3000"
                },
                "Protocol": {
                    "description": "Protocol is the protocol type for the rule (TCP, UDP, ICMP). Don't use ALL here.",
                    "type": "string",
                    "enum": [
                        "TCP",
                        "UDP",
                        "ICMP"
                    ],
                    "example": "TCP"
                }
            }
        },
        "cloudmodel.IdList": {
            "type": "object",
            "properties": {
                "idList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cloudmodel.ImageInfo": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string"
                },
                "cspImageName": {
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "description": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.KeyValue"
                    }
                },
                "fetchedTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "imageStatus": {
                    "description": "Available, Deprecated, NA",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.ImageStatus"
                        }
                    ],
                    "example": "Available"
                },
                "infraType": {
                    "description": "vm|k8s|kubernetes|container, etc.",
                    "type": "string"
                },
                "isBasicImage": {
                    "type": "boolean",
                    "default": false
                },
                "isGPUImage": {
                    "type": "boolean",
                    "default": false
                },
                "isKubernetesImage": {
                    "type": "boolean",
                    "default": false
                },
                "name": {
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "namespace": {
                    "description": "Composite primary key",
                    "type": "string",
                    "example": "default"
                },
                "osArchitecture": {
                    "description": "arm64, x86_64 etc.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.OSArchitecture"
                        }
                    ],
                    "example": "x86_64"
                },
                "osDiskSizeGB": {
                    "description": "10, 50, 100 etc.",
                    "type": "number",
                    "example": 50
                },
                "osDiskType": {
                    "description": "ebs, HDD, etc.",
                    "type": "string",
                    "example": "HDD"
                },
                "osDistribution": {
                    "description": "Ubuntu 22.04~, CentOS 8 etc.",
                    "type": "string",
                    "example": "Ubuntu 22.04~"
                },
                "osPlatform": {
                    "description": "Linux/UNIX, Windows, NA",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.OSPlatform"
                        }
                    ],
                    "example": "Linux/UNIX"
                },
                "osType": {
                    "type": "string",
                    "example": "ubuntu 22.04"
                },
                "providerName": {
                    "type": "string"
                },
                "regionList": {
                    "description": "Array field for supporting multiple regions",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "systemLabel": {
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                }
            }
        },
        "cloudmodel.ImageStatus": {
            "type": "string",
            "enum": [
                "Available",
                "Unavailable",
                "Deprecated",
                "NA"
            ],
            "x-enum-varnames": [
                "ImageAvailable",
                "ImageUnavailable",
                "ImageDeprecated",
                "ImageNA"
            ]
        },
        "cloudmodel.KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "cloudmodel.Location": {
            "type": "object",
            "properties": {
                "display": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "cloudmodel.MciCmdReq": {
            "type": "object",
            "required": [
                "command"
            ],
            "properties": {
                "command": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "client_ip=$(echo $SSH_CLIENT | awk '{print $1}'); echo SSH client IP is: $client_ip"
                    ]
                },
                "userName": {
                    "type": "string",
                    "example": "cb-user"
                }
            }
        },
        "cloudmodel.MciCreationErrors": {
            "type": "object",
            "properties": {
                "failedVmCount": {
                    "description": "FailedVmCount is the number of VMs that failed to be created",
                    "type": "integer"
                },
                "failureHandlingStrategy": {
                    "description": "FailureHandlingStrategy indicates how failures were handled",
                    "type": "string"
                },
                "successfulVmCount": {
                    "description": "SuccessfulVmCount is the number of VMs that were successfully created",
                    "type": "integer"
                },
                "totalVmCount": {
                    "description": "TotalVmCount is the total number of VMs that were supposed to be created",
                    "type": "integer"
                },
                "vmCreationErrors": {
                    "description": "VmCreationErrors contains errors from actual VM creation phase",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.VmCreationError"
                    }
                },
                "vmObjectCreationErrors": {
                    "description": "VmObjectCreationErrors contains errors from VM object creation phase",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.VmCreationError"
                    }
                }
            }
        },
        "cloudmodel.MciDynamicReq": {
            "type": "object",
            "required": [
                "name",
                "subGroups"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Made in CB-TB"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:no)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "mci01"
                },
                "policyOnPartialFailure": {
                    "description": "PolicyOnPartialFailure determines how to handle VM creation failures\n- \"continue\": Continue with partial MCI creation (default)\n- \"rollback\": Cleanup entire MCI when any VM fails\n- \"refine\": Mark failed VMs for refinement",
                    "type": "string",
                    "default": "continue",
                    "enum": [
                        "continue",
                        "rollback",
                        "refine"
                    ],
                    "example": "continue"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciCmdReq"
                        }
                    ]
                },
                "subGroups": {
                    "description": "SubGroups is array of VM requests for multi-cloud infrastructure\nExample: Multiple VM groups across different CSPs\n[\n  {\n    \"name\": \"aws-group\",\n    \"subGroupSize\": \"3\",\n    \"specId\": \"aws+ap-northeast-2+t3.nano\",\n    \"imageId\": \"ami-01f71f215b23ba262\",\n    \"rootDiskSize\": \"50\",\n    \"label\": {\"role\": \"worker\", \"csp\": \"aws\"}\n  },\n  {\n    \"name\": \"azure-group\",\n    \"subGroupSize\": \"2\",\n    \"specId\": \"azure+koreasouth+standard_b1s\",\n    \"imageId\": \"Canonical:0001-com-ubuntu-server-jammy:22_04-lts:22.04.202505210\",\n    \"rootDiskSize\": \"50\",\n    \"label\": {\"role\": \"head\", \"csp\": \"azure\"}\n  },\n  {\n    \"name\": \"gcp-group\",\n    \"subGroupSize\": \"1\",\n    \"specId\": \"gcp+asia-northeast3+g1-small\",\n    \"imageId\": \"https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2204-jammy-v20250712\",\n    \"rootDiskSize\": \"50\",\n    \"label\": {\"role\": \"test\", \"csp\": \"gcp\"}\n  }\n]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.CreateSubGroupDynamicReq"
                    }
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": ""
                }
            }
        },
        "cloudmodel.MciInfo": {
            "type": "object",
            "properties": {
                "configureCloudAdaptiveNetwork": {
                    "description": "ConfigureCloudAdaptiveNetwork is an option to configure Cloud Adaptive Network (CLADNet) ([yes/no] default:yes)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "yes"
                },
                "creationErrors": {
                    "description": "CreationErrors contains information about VM creation failures (if any)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciCreationErrors"
                        }
                    ]
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:no)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "newVmList": {
                    "description": "List of IDs for new VMs. Return IDs if the VMs are newly added. This field should be used for return body only.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "placementAlgo": {
                    "type": "string"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciCmdReq"
                        }
                    ]
                },
                "postCommandResult": {
                    "description": "PostCommandResult is the result of the command for bootstraping the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciSshCmdResult"
                        }
                    ]
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusCount": {
                    "$ref": "#/definitions/cloudmodel.StatusCountInfo"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.VmInfo"
                    }
                }
            }
        },
        "cloudmodel.MciInfoList": {
            "type": "object",
            "properties": {
                "mci": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.MciInfo"
                    }
                }
            }
        },
        "cloudmodel.MciReq": {
            "type": "object",
            "required": [
                "name",
                "subGroups"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Made in CB-TB"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:yes)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "mci01"
                },
                "placementAlgo": {
                    "type": "string"
                },
                "policyOnPartialFailure": {
                    "description": "PolicyOnPartialFailure determines how to handle VM creation failures\n- \"continue\": Continue with partial MCI creation (default)\n- \"rollback\": Cleanup entire MCI when any VM fails\n- \"refine\": Mark failed VMs for refinement",
                    "type": "string",
                    "default": "continue",
                    "enum": [
                        "continue",
                        "rollback",
                        "refine"
                    ],
                    "example": "continue"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciCmdReq"
                        }
                    ]
                },
                "subGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.CreateSubGroupReq"
                    }
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": ""
                }
            }
        },
        "cloudmodel.MciSshCmdResult": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.SshCmdResult"
                    }
                }
            }
        },
        "cloudmodel.OSArchitecture": {
            "type": "string",
            "enum": [
                "arm32",
                "arm64",
                "arm64_mac",
                "x86_32",
                "x86_64",
                "x86_32_mac",
                "x86_64_mac",
                "s390x",
                "NA",
                ""
            ],
            "x-enum-varnames": [
                "ARM32",
                "ARM64",
                "ARM64_MAC",
                "X86_32",
                "X86_64",
                "X86_32_MAC",
                "X86_64_MAC",
                "S390X",
                "ArchitectureNA",
                "ArchitectureUnknown"
            ]
        },
        "cloudmodel.OSPlatform": {
            "type": "string",
            "enum": [
                "Linux/UNIX",
                "Windows",
                "NA"
            ],
            "x-enum-varnames": [
                "Linux_UNIX",
                "Windows",
                "PlatformNA"
            ]
        },
        "cloudmodel.RecommendedSecurityGroup": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "sourceServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "targetSecurityGroup": {
                    "$ref": "#/definitions/cloudmodel.SecurityGroupReq"
                }
            }
        },
        "cloudmodel.RecommendedVNet": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetVNet": {
                    "$ref": "#/definitions/cloudmodel.VNetReq"
                }
            }
        },
        "cloudmodel.RecommendedVmInfraDynamic": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetVmInfra": {
                    "$ref": "#/definitions/cloudmodel.MciDynamicReq"
                }
            }
        },
        "cloudmodel.RecommendedVmOsImage": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "sourceServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "targetVmOsImage": {
                    "$ref": "#/definitions/cloudmodel.ImageInfo"
                }
            }
        },
        "cloudmodel.RecommendedVmSpec": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "sourceServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "targetVmSpec": {
                    "$ref": "#/definitions/cloudmodel.SpecInfo"
                }
            }
        },
        "cloudmodel.RegionDetail": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/cloudmodel.Location"
                },
                "regionId": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cloudmodel.RegionInfo": {
            "type": "object",
            "properties": {
                "region": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "cloudmodel.RegionZoneInfo": {
            "type": "object",
            "properties": {
                "assignedRegion": {
                    "type": "string"
                },
                "assignedZone": {
                    "type": "string"
                }
            }
        },
        "cloudmodel.SecurityGroupReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name",
                "vNetId"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is required to register object from CSP (option=register)",
                    "type": "string",
                    "example": "required for option=register only. ex: csp-06eb41e14121c550a"
                },
                "description": {
                    "type": "string"
                },
                "firewallRules": {
                    "description": "validate:\"required\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.FirewallRuleReq"
                    }
                },
                "name": {
                    "type": "string"
                },
                "vNetId": {
                    "type": "string"
                }
            }
        },
        "cloudmodel.SpecInfo": {
            "type": "object",
            "properties": {
                "acceleratorCount": {
                    "type": "integer"
                },
                "acceleratorMemoryGB": {
                    "type": "number"
                },
                "acceleratorModel": {
                    "type": "string"
                },
                "acceleratorType": {
                    "type": "string"
                },
                "architecture": {
                    "type": "string",
                    "example": "x86_64"
                },
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionName": {
                    "type": "string"
                },
                "costPerHour": {
                    "type": "number"
                },
                "cspSpecName": {
                    "description": "CspSpecName is name of the spec given by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "description": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.KeyValue"
                    }
                },
                "diskSizeGB": {
                    "type": "number"
                },
                "evaluationScore01": {
                    "type": "number"
                },
                "evaluationScore02": {
                    "type": "number"
                },
                "evaluationScore03": {
                    "type": "number"
                },
                "evaluationScore04": {
                    "type": "number"
                },
                "evaluationScore05": {
                    "type": "number"
                },
                "evaluationScore06": {
                    "type": "number"
                },
                "evaluationScore07": {
                    "type": "number"
                },
                "evaluationScore08": {
                    "type": "number"
                },
                "evaluationScore09": {
                    "type": "number"
                },
                "evaluationScore10": {
                    "type": "number"
                },
                "evaluationStatus": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws+ap-southeast+csp-06eb41e14121c550a"
                },
                "infraType": {
                    "description": "InfraType can be one of vm|k8s|kubernetes|container, etc.",
                    "type": "string"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "maxTotalStorageTiB": {
                    "type": "integer"
                },
                "memoryGiB": {
                    "type": "number"
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "namespace": {
                    "type": "string",
                    "example": "default"
                },
                "netBwGbps": {
                    "type": "integer"
                },
                "orderInFilteredResult": {
                    "type": "integer"
                },
                "osType": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "regionLatitude": {
                    "type": "number"
                },
                "regionLongitude": {
                    "type": "number"
                },
                "regionName": {
                    "type": "string"
                },
                "rootDiskSize": {
                    "type": "string"
                },
                "rootDiskType": {
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the Resource in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vCPU": {
                    "type": "integer"
                }
            }
        },
        "cloudmodel.SshCmdResult": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "err": {},
                "mciId": {
                    "type": "string"
                },
                "stderr": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "stdout": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vmId": {
                    "type": "string"
                },
                "vmIp": {
                    "type": "string"
                }
            }
        },
        "cloudmodel.SshKeyReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "Fields for \"Register existing SSH keys\" feature\nCspResourceId is required to register object from CSP (option=register)",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verifiedUsername": {
                    "type": "string"
                }
            }
        },
        "cloudmodel.StatusCountInfo": {
            "type": "object",
            "properties": {
                "countCreating": {
                    "description": "CountCreating is for counting Creating",
                    "type": "integer"
                },
                "countFailed": {
                    "description": "CountFailed is for counting Failed",
                    "type": "integer"
                },
                "countRebooting": {
                    "description": "CountRebooting is for counting Rebooting",
                    "type": "integer"
                },
                "countResuming": {
                    "description": "CountResuming is for counting Resuming",
                    "type": "integer"
                },
                "countRunning": {
                    "description": "CountRunning is for counting Running",
                    "type": "integer"
                },
                "countSuspended": {
                    "description": "CountSuspended is for counting Suspended",
                    "type": "integer"
                },
                "countSuspending": {
                    "description": "CountSuspending is for counting Suspending",
                    "type": "integer"
                },
                "countTerminated": {
                    "description": "CountTerminated is for counting Terminated",
                    "type": "integer"
                },
                "countTerminating": {
                    "description": "CountTerminating is for counting Terminating",
                    "type": "integer"
                },
                "countTotal": {
                    "description": "CountTotal is for Total VMs",
                    "type": "integer"
                },
                "countUndefined": {
                    "description": "CountUndefined is for counting Undefined",
                    "type": "integer"
                }
            }
        },
        "cloudmodel.SubnetReq": {
            "type": "object",
            "required": [
                "ipv4_CIDR",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "subnet00 managed by CB-Tumblebug"
                },
                "ipv4_CIDR": {
                    "type": "string",
                    "example": "10.0.1.0/24"
                },
                "name": {
                    "type": "string",
                    "example": "subnet00"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "cloudmodel.VNetReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name"
            ],
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "example": "10.0.0.0/16"
                },
                "connectionName": {
                    "type": "string",
                    "example": "aws-ap-northeast-2"
                },
                "description": {
                    "type": "string",
                    "example": "vnet00 managed by CB-Tumblebug"
                },
                "name": {
                    "type": "string",
                    "example": "vnet00"
                },
                "subnetInfoList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.SubnetReq"
                    }
                }
            }
        },
        "cloudmodel.VmCreationError": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error is the error message",
                    "type": "string"
                },
                "phase": {
                    "description": "Phase indicates when the error occurred",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp when the error occurred",
                    "type": "string"
                },
                "vmName": {
                    "description": "VmName is the name of the VM that failed",
                    "type": "string"
                }
            }
        },
        "cloudmodel.VmInfo": {
            "type": "object",
            "properties": {
                "addtionalDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.KeyValue"
                    }
                },
                "commandStatus": {
                    "description": "CommandStatus stores the status and history of remote commands executed on this VM",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.CommandStatusInfo"
                    }
                },
                "connectionConfig": {
                    "$ref": "#/definitions/cloudmodel.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "string",
                    "example": "2022-11-10 23:00:00"
                },
                "cspImageName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "cspSpecName": {
                    "type": "string"
                },
                "cspSshKeyId": {
                    "type": "string"
                },
                "cspSubnetId": {
                    "type": "string"
                },
                "cspVNetId": {
                    "type": "string"
                },
                "dataDiskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "imageId": {
                    "type": "string"
                },
                "label": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "location": {
                    "$ref": "#/definitions/cloudmodel.Location"
                },
                "monAgentStatus": {
                    "description": "Montoring agent status",
                    "type": "string",
                    "example": "[installed, notInstalled, failed]"
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "networkAgentStatus": {
                    "description": "NetworkAgent status",
                    "type": "string",
                    "example": "[notInstalled, installing, installed, failed]"
                },
                "networkInterface": {
                    "type": "string"
                },
                "privateDNS": {
                    "type": "string"
                },
                "privateIP": {
                    "type": "string"
                },
                "publicDNS": {
                    "type": "string"
                },
                "publicIP": {
                    "type": "string"
                },
                "region": {
                    "description": "AWS, ex) {us-east1, us-east1-c} or {ap-northeast-2}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.RegionInfo"
                        }
                    ]
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "rootDiskName": {
                    "type": "string"
                },
                "rootDiskSize": {
                    "type": "string"
                },
                "rootDiskType": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specId": {
                    "type": "string"
                },
                "sshKeyId": {
                    "type": "string"
                },
                "sshPort": {
                    "type": "string"
                },
                "status": {
                    "description": "Required by CB-Tumblebug",
                    "type": "string"
                },
                "subGroupId": {
                    "description": "defined if the VM is in a group",
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "string",
                    "example": "Failed because ..."
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vNetId": {
                    "type": "string"
                },
                "vmUserName": {
                    "type": "string"
                },
                "vmUserPassword": {
                    "type": "string"
                }
            }
        },
        "common.SimpleMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Any message"
                }
            }
        },
        "common.SimpleMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Any message"
                }
            }
        },
        "controller.CORSRule": {
            "type": "object",
            "required": [
                "allowedMethods",
                "allowedOrigins"
            ],
            "properties": {
                "allowedHeaders": {
                    "description": "Allowed headers (e.g., [\"*\"])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedMethods": {
                    "description": "Allowed HTTP methods (e.g., [\"GET\", \"PUT\", \"POST\"])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedOrigins": {
                    "description": "Allowed origins (e.g., [\"*\"], [\"https://example.com\"])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exposeHeaders": {
                    "description": "Headers to expose (e.g., [\"ETag\"])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxAgeSeconds": {
                    "description": "Preflight request cache time in seconds",
                    "type": "integer"
                }
            }
        },
        "controller.JSONResult": {
            "type": "object"
        },
        "controller.MigrateInfraRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetCloud": {
                    "$ref": "#/definitions/cloudmodel.CloudProperty"
                },
                "targetSecurityGroupList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.SecurityGroupReq"
                    }
                },
                "targetSshKey": {
                    "$ref": "#/definitions/cloudmodel.SshKeyReq"
                },
                "targetVNet": {
                    "$ref": "#/definitions/cloudmodel.VNetReq"
                },
                "targetVmInfra": {
                    "$ref": "#/definitions/cloudmodel.MciReq"
                },
                "targetVmOsImageList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.ImageInfo"
                    }
                },
                "targetVmSpecList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.SpecInfo"
                    }
                }
            }
        },
        "controller.MigrateInfraResponse": {
            "type": "object",
            "properties": {
                "configureCloudAdaptiveNetwork": {
                    "description": "ConfigureCloudAdaptiveNetwork is an option to configure Cloud Adaptive Network (CLADNet) ([yes/no] default:yes)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "yes"
                },
                "creationErrors": {
                    "description": "CreationErrors contains information about VM creation failures (if any)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciCreationErrors"
                        }
                    ]
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:no)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "newVmList": {
                    "description": "List of IDs for new VMs. Return IDs if the VMs are newly added. This field should be used for return body only.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "placementAlgo": {
                    "type": "string"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciCmdReq"
                        }
                    ]
                },
                "postCommandResult": {
                    "description": "PostCommandResult is the result of the command for bootstraping the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciSshCmdResult"
                        }
                    ]
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusCount": {
                    "$ref": "#/definitions/cloudmodel.StatusCountInfo"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.VmInfo"
                    }
                }
            }
        },
        "controller.MigrateInfraWithDefaultsRequest": {
            "type": "object",
            "required": [
                "name",
                "subGroups"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Made in CB-TB"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:no)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "mci01"
                },
                "policyOnPartialFailure": {
                    "description": "PolicyOnPartialFailure determines how to handle VM creation failures\n- \"continue\": Continue with partial MCI creation (default)\n- \"rollback\": Cleanup entire MCI when any VM fails\n- \"refine\": Mark failed VMs for refinement",
                    "type": "string",
                    "default": "continue",
                    "enum": [
                        "continue",
                        "rollback",
                        "refine"
                    ],
                    "example": "continue"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciCmdReq"
                        }
                    ]
                },
                "subGroups": {
                    "description": "SubGroups is array of VM requests for multi-cloud infrastructure\nExample: Multiple VM groups across different CSPs\n[\n  {\n    \"name\": \"aws-group\",\n    \"subGroupSize\": \"3\",\n    \"specId\": \"aws+ap-northeast-2+t3.nano\",\n    \"imageId\": \"ami-01f71f215b23ba262\",\n    \"rootDiskSize\": \"50\",\n    \"label\": {\"role\": \"worker\", \"csp\": \"aws\"}\n  },\n  {\n    \"name\": \"azure-group\",\n    \"subGroupSize\": \"2\",\n    \"specId\": \"azure+koreasouth+standard_b1s\",\n    \"imageId\": \"Canonical:0001-com-ubuntu-server-jammy:22_04-lts:22.04.202505210\",\n    \"rootDiskSize\": \"50\",\n    \"label\": {\"role\": \"head\", \"csp\": \"azure\"}\n  },\n  {\n    \"name\": \"gcp-group\",\n    \"subGroupSize\": \"1\",\n    \"specId\": \"gcp+asia-northeast3+g1-small\",\n    \"imageId\": \"https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2204-jammy-v20250712\",\n    \"rootDiskSize\": \"50\",\n    \"label\": {\"role\": \"test\", \"csp\": \"gcp\"}\n  }\n]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.CreateSubGroupDynamicReq"
                    }
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": ""
                }
            }
        },
        "controller.MigrateInfraWithDefaultsResponse": {
            "type": "object",
            "properties": {
                "configureCloudAdaptiveNetwork": {
                    "description": "ConfigureCloudAdaptiveNetwork is an option to configure Cloud Adaptive Network (CLADNet) ([yes/no] default:yes)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "yes"
                },
                "creationErrors": {
                    "description": "CreationErrors contains information about VM creation failures (if any)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciCreationErrors"
                        }
                    ]
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:no)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "newVmList": {
                    "description": "List of IDs for new VMs. Return IDs if the VMs are newly added. This field should be used for return body only.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "placementAlgo": {
                    "type": "string"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciCmdReq"
                        }
                    ]
                },
                "postCommandResult": {
                    "description": "PostCommandResult is the result of the command for bootstraping the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cloudmodel.MciSshCmdResult"
                        }
                    ]
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusCount": {
                    "$ref": "#/definitions/cloudmodel.StatusCountInfo"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.VmInfo"
                    }
                }
            }
        },
        "controller.MigrateObjectStorageRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetCloud": {
                    "$ref": "#/definitions/cloudmodel.CloudProperty"
                },
                "targetObjectStorages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.TargetObjectStorageProperty"
                    }
                }
            }
        },
        "controller.RecommendInfraRequest": {
            "type": "object",
            "properties": {
                "desiredProvider": {
                    "type": "string",
                    "example": "aws"
                },
                "desiredRegion": {
                    "type": "string",
                    "example": "ap-northeast-2"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recommendation.Kubernetes"
                    }
                }
            }
        },
        "controller.RecommendObjectStorageRequest": {
            "type": "object",
            "required": [
                "desiredCloud",
                "sourceObjectStorages"
            ],
            "properties": {
                "desiredCloud": {
                    "$ref": "#/definitions/cloudmodel.CloudProperty"
                },
                "sourceObjectStorages": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/controller.SourceObjectStorageProperty"
                    }
                }
            }
        },
        "controller.RecommendObjectStorageResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetCloud": {
                    "$ref": "#/definitions/cloudmodel.CloudProperty"
                },
                "targetObjectStorages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.TargetObjectStorageProperty"
                    }
                }
            }
        },
        "controller.RecommendSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetSecurityGroupList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.RecommendedSecurityGroup"
                    }
                }
            }
        },
        "controller.RecommendVNetResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "targetVNetList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.RecommendedVNet"
                    }
                }
            }
        },
        "controller.RecommendVmInfraRequest": {
            "type": "object",
            "properties": {
                "desiredCspAndRegionPair": {
                    "$ref": "#/definitions/cloudmodel.CloudProperty"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/onpremisemodel.OnpremInfra"
                }
            }
        },
        "controller.RecommendVmInfraResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetCloud": {
                    "$ref": "#/definitions/cloudmodel.CloudProperty"
                },
                "targetSecurityGroupList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.SecurityGroupReq"
                    }
                },
                "targetSshKey": {
                    "$ref": "#/definitions/cloudmodel.SshKeyReq"
                },
                "targetVNet": {
                    "$ref": "#/definitions/cloudmodel.VNetReq"
                },
                "targetVmInfra": {
                    "$ref": "#/definitions/cloudmodel.MciReq"
                },
                "targetVmOsImageList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.ImageInfo"
                    }
                },
                "targetVmSpecList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.SpecInfo"
                    }
                }
            }
        },
        "controller.RecommendVmInfraWithDefaultsRequest": {
            "type": "object",
            "properties": {
                "desiredCspAndRegionPair": {
                    "$ref": "#/definitions/cloudmodel.CloudProperty"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/onpremisemodel.OnpremInfra"
                }
            }
        },
        "controller.RecommendVmInfraWithDefaultsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "targetVmInfraList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.RecommendedVmInfraDynamic"
                    }
                }
            }
        },
        "controller.RecommendVmOsImageResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "recommendedVmOsImageList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.RecommendedVmOsImage"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.RecommendVmSpecResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "recommendedVmSpecList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cloudmodel.RecommendedVmSpec"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.SourceObjectStorageProperty": {
            "type": "object",
            "required": [
                "bucketName"
            ],
            "properties": {
                "accessFrequency": {
                    "description": "Access pattern (critical for storage class selection)",
                    "type": "string"
                },
                "bucketName": {
                    "description": "Basic identification",
                    "type": "string"
                },
                "corsEnabled": {
                    "description": "Whether CORS is enabled",
                    "type": "boolean"
                },
                "corsRules": {
                    "description": "CORS rules configuration",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.CORSRule"
                    }
                },
                "creationDate": {
                    "description": "Creation date (RFC3339)",
                    "type": "string"
                },
                "encryptionEnabled": {
                    "description": "Security settings",
                    "type": "boolean"
                },
                "isPublic": {
                    "description": "Whether bucket has public access",
                    "type": "boolean"
                },
                "objectCount": {
                    "description": "Total number of objects",
                    "type": "integer"
                },
                "tags": {
                    "description": "Metadata",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "totalSizeBytes": {
                    "description": "Capacity information (for cost estimation and recommendations)",
                    "type": "integer"
                },
                "versioningEnabled": {
                    "description": "Feature settings",
                    "type": "boolean"
                }
            }
        },
        "controller.TargetObjectStorageProperty": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "description": "Recommended target bucket name with deterministic suffix",
                    "type": "string"
                },
                "corsEnabled": {
                    "description": "Whether CORS is configured",
                    "type": "boolean"
                },
                "corsRules": {
                    "description": "CORS rules configuration",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.CORSRule"
                    }
                },
                "sourceBucketName": {
                    "description": "Source bucket name for referencing",
                    "type": "string"
                },
                "versioningEnabled": {
                    "description": "Whether to enable versioning",
                    "type": "boolean"
                }
            }
        },
        "github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "Any details"
                },
                "list": {
                    "type": "array",
                    "items": {}
                },
                "object": {
                    "type": "object",
                    "additionalProperties": true
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "text": {
                    "type": "string",
                    "example": "Any text"
                }
            }
        },
        "model.BastionNode": {
            "type": "object",
            "properties": {
                "mciId": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                }
            }
        },
        "model.ConnConfig": {
            "type": "object",
            "properties": {
                "configName": {
                    "type": "string"
                },
                "credentialHolder": {
                    "type": "string"
                },
                "credentialName": {
                    "type": "string"
                },
                "driverName": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "regionDetail": {
                    "$ref": "#/definitions/model.RegionDetail"
                },
                "regionRepresentative": {
                    "type": "boolean"
                },
                "regionZoneInfo": {
                    "$ref": "#/definitions/model.RegionZoneInfo"
                },
                "regionZoneInfoName": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "model.FirewallRuleInfo": {
            "type": "object",
            "required": [
                "Direction",
                "Protocol"
            ],
            "properties": {
                "CIDR": {
                    "description": "CIDR is the allowed IP range (e.g. 0.0.0.0/0, 10.0.0/8)",
                    "type": "string",
                    "example": "0.0.0.0/0"
                },
                "Direction": {
                    "description": "Direction is the direction of the rule (inbound or outbound)",
                    "type": "string",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "example": "inbound"
                },
                "Port": {
                    "description": "Port is the single port (e.g. \"22\") or port range (e.g. \"1-65535\") for the rule",
                    "type": "string",
                    "example": "1-65535"
                },
                "Protocol": {
                    "description": "Protocol is the protocol type for the rule (TCP, UDP, ICMP, ALL)",
                    "type": "string",
                    "enum": [
                        "TCP",
                        "UDP",
                        "ICMP",
                        "ALL"
                    ],
                    "example": "TCP"
                }
            }
        },
        "model.FirewallRuleReq": {
            "type": "object",
            "required": [
                "Direction",
                "Protocol"
            ],
            "properties": {
                "CIDR": {
                    "description": "CIDR is the allowed IP range (e.g. 0.0.0.0/0, 10.0.0/8)",
                    "type": "string",
                    "example": "0.0.0.0/0"
                },
                "Direction": {
                    "description": "Direction is the direction of the rule (inbound or outbound)",
                    "type": "string",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "example": "inbound"
                },
                "Ports": {
                    "description": "Ports is to get multiple ports or port ranges as a string (e.g. \"22,900-1000,2000-3000\")\nThis allows flexibility in specifying single ports or ranges in a comma-separated format.\nThis field is used to handle both single ports and port ranges in a unified way.\nIt can accept a single port (e.g. \"22\"), a range (e.g. \"900-1000\"), or multiple ports/ranges (e.g. \"22,900-1000,2000-3000\").",
                    "type": "string",
                    "example": "22,900-1000,2000-3000"
                },
                "Protocol": {
                    "description": "Protocol is the protocol type for the rule (TCP, UDP, ICMP). Don't use ALL here.",
                    "type": "string",
                    "enum": [
                        "TCP",
                        "UDP",
                        "ICMP"
                    ],
                    "example": "TCP"
                }
            }
        },
        "model.IdList": {
            "type": "object",
            "properties": {
                "output": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.K8sClusterDynamicReq": {
            "type": "object",
            "required": [
                "imageId",
                "name",
                "specId"
            ],
            "properties": {
                "connectionName": {
                    "description": "if ConnectionName is given, the VM tries to use associtated credential.\nif not, it will use predefined ConnectionName in Spec objects",
                    "type": "string",
                    "default": "tencent-ap-seoul"
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "desiredNodeSize": {
                    "type": "string",
                    "default": "1",
                    "example": "1"
                },
                "imageId": {
                    "description": "ImageId is field for id of a image in common namespace",
                    "type": "string",
                    "example": "default, tencent+ap-seoul+ubuntu20.04"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxNodeSize": {
                    "type": "string",
                    "default": "2",
                    "example": "3"
                },
                "minNodeSize": {
                    "type": "string",
                    "default": "1",
                    "example": "1"
                },
                "name": {
                    "description": "K8sCluster name if it is not empty.",
                    "type": "string",
                    "example": "k8scluster01"
                },
                "nodeGroupName": {
                    "description": "NodeGroup name if it is not empty",
                    "type": "string",
                    "example": "k8sng01"
                },
                "onAutoScaling": {
                    "type": "string",
                    "default": "true",
                    "example": "true"
                },
                "rootDiskSize": {
                    "description": "\"default\", Integer (GB): [\"50\", ..., \"1000\"]",
                    "type": "string",
                    "default": "default",
                    "example": "default, 30, 42, ..."
                },
                "rootDiskType": {
                    "description": "\"\", \"default\", \"TYPE1\", AWS: [\"standard\", \"gp2\", \"gp3\"], Azure: [\"PremiumSSD\", \"StandardSSD\", \"StandardHDD\"], GCP: [\"pd-standard\", \"pd-balanced\", \"pd-ssd\", \"pd-extreme\"], ALIBABA: [\"cloud_efficiency\", \"cloud\", \"cloud_essd\"], TENCENT: [\"CLOUD_PREMIUM\", \"CLOUD_SSD\"]",
                    "type": "string",
                    "default": "default",
                    "example": "default, TYPE1, ..."
                },
                "specId": {
                    "description": "SpecId is field for id of a spec in common namespace",
                    "type": "string",
                    "example": "tencent+ap-seoul+S2.MEDIUM4"
                },
                "version": {
                    "description": "K8s Clsuter version",
                    "type": "string",
                    "example": "1.29"
                }
            }
        },
        "model.K8sNodeGroupReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "desiredNodeSize": {
                    "type": "string",
                    "example": "1"
                },
                "imageId": {
                    "type": "string",
                    "example": "image-01"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxNodeSize": {
                    "type": "string",
                    "example": "3"
                },
                "minNodeSize": {
                    "type": "string",
                    "example": "1"
                },
                "name": {
                    "type": "string",
                    "example": "k8sng01"
                },
                "onAutoScaling": {
                    "description": "autoscale config.",
                    "type": "string",
                    "example": "true"
                },
                "rootDiskSize": {
                    "description": "\"default\", Integer (GB): [\"50\", ..., \"1000\"]",
                    "type": "string",
                    "example": "40"
                },
                "rootDiskType": {
                    "description": "\"\", \"default\", \"TYPE1\", AWS: [\"standard\", \"gp2\", \"gp3\"], Azure: [\"PremiumSSD\", \"StandardSSD\", \"StandardHDD\"], GCP: [\"pd-standard\", \"pd-balanced\", \"pd-ssd\", \"pd-extreme\"], ALIBABA: [\"cloud_efficiency\", \"cloud\", \"cloud_ssd\"], TENCENT: [\"CLOUD_PREMIUM\", \"CLOUD_SSD\"]",
                    "type": "string",
                    "example": "cloud_essd"
                },
                "specId": {
                    "type": "string",
                    "example": "spec-01"
                },
                "sshKeyId": {
                    "type": "string",
                    "example": "sshkey-01"
                }
            }
        },
        "model.KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.Location": {
            "type": "object",
            "properties": {
                "display": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "model.RegionDetail": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/model.Location"
                },
                "regionId": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.RegionZoneInfo": {
            "type": "object",
            "properties": {
                "assignedRegion": {
                    "type": "string"
                },
                "assignedZone": {
                    "type": "string"
                }
            }
        },
        "model.SecurityGroupInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionConfig": {
                    "$ref": "#/definitions/model.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "description": {
                    "type": "string"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FirewallRuleInfo"
                    }
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the Resource in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vNetId": {
                    "type": "string"
                }
            }
        },
        "model.SecurityGroupReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name",
                "vNetId"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is required to register object from CSP (option=register)",
                    "type": "string",
                    "example": "required for option=register only. ex: csp-06eb41e14121c550a"
                },
                "description": {
                    "type": "string"
                },
                "firewallRules": {
                    "description": "validate:\"required\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FirewallRuleReq"
                    }
                },
                "name": {
                    "type": "string"
                },
                "vNetId": {
                    "type": "string"
                }
            }
        },
        "model.SimpleMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Any message"
                }
            }
        },
        "model.SshKeyInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionConfig": {
                    "$ref": "#/definitions/model.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "description": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the Resource in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "username": {
                    "type": "string"
                },
                "verifiedUsername": {
                    "type": "string"
                }
            }
        },
        "model.SshKeyReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "Fields for \"Register existing SSH keys\" feature\nCspResourceId is required to register object from CSP (option=register)",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verifiedUsername": {
                    "type": "string"
                }
            }
        },
        "model.SubnetInfo": {
            "type": "object",
            "properties": {
                "bastionNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BastionNode"
                    }
                },
                "connectionConfig": {
                    "$ref": "#/definitions/model.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "cspVNetId": {
                    "description": "CspVNetId is vNet resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-45eb41e14121c550a"
                },
                "cspVNetName": {
                    "description": "CspVNetName is identifier to handle CSP vNet resource",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "ipv4_CIDR": {
                    "type": "string"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "model.SubnetReq": {
            "type": "object",
            "required": [
                "ipv4_CIDR",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "subnet00 managed by CB-Tumblebug"
                },
                "ipv4_CIDR": {
                    "type": "string",
                    "example": "10.0.1.0/24"
                },
                "name": {
                    "type": "string",
                    "example": "subnet00"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "model.VNetInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cidrBlock": {
                    "type": "string"
                },
                "connectionConfig": {
                    "$ref": "#/definitions/model.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetInfoList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SubnetInfo"
                    }
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the Resource in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                }
            }
        },
        "model.VNetReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name"
            ],
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "example": "10.0.0.0/16"
                },
                "connectionName": {
                    "type": "string",
                    "example": "aws-ap-northeast-2"
                },
                "description": {
                    "type": "string",
                    "example": "vnet00 managed by CB-Tumblebug"
                },
                "name": {
                    "type": "string",
                    "example": "vnet00"
                },
                "subnetInfoList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SubnetReq"
                    }
                }
            }
        },
        "onpremisemodel.CpuProperty": {
            "type": "object",
            "required": [
                "cores",
                "cpus",
                "threads"
            ],
            "properties": {
                "architecture": {
                    "type": "string",
                    "example": "x86_64"
                },
                "cores": {
                    "description": "Number of physical cores per CPU",
                    "type": "integer",
                    "example": 18
                },
                "cpus": {
                    "description": "Number of physical CPUs (sockets)",
                    "type": "integer",
                    "example": 2
                },
                "maxSpeed": {
                    "description": "Maximum speed in GHz",
                    "type": "number",
                    "example": 3.6
                },
                "model": {
                    "type": "string",
                    "example": "Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz"
                },
                "threads": {
                    "description": "Number of logical CPUs (threads) per CPU with hyper-threading enabled",
                    "type": "integer",
                    "example": 36
                },
                "vendor": {
                    "type": "string",
                    "example": "GenuineIntel"
                }
            }
        },
        "onpremisemodel.DiskProperty": {
            "type": "object",
            "required": [
                "label",
                "totalSize",
                "type"
            ],
            "properties": {
                "available": {
                    "description": "Unit GiB",
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "totalSize": {
                    "description": "Unit GiB",
                    "type": "integer",
                    "example": 1024
                },
                "type": {
                    "description": "SSD, HDD",
                    "type": "string",
                    "example": "SSD"
                },
                "used": {
                    "description": "Unit GiB",
                    "type": "integer"
                }
            }
        },
        "onpremisemodel.FirewallRuleProperty": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "e.g., allow, deny",
                    "type": "string"
                },
                "direction": {
                    "description": "e.g., inbound, outbound",
                    "type": "string"
                },
                "dstCIDR": {
                    "description": "e.g., \"123.123.123.123/32\", \"123.123.123.123/24\", \"0.0.0.0/0\"",
                    "type": "string"
                },
                "dstPorts": {
                    "description": "e.g., \"80\", \"80,443\", \"1024-65535\", \"*\" (for all ports)",
                    "type": "string"
                },
                "protocol": {
                    "description": "e.g., \"TCP\", \"UDP\", \"ICMP\", \"*\" (for all protocol)",
                    "type": "string"
                },
                "srcCIDR": {
                    "description": "e.g., \"123.123.123.123/32\", \"123.123.123.123/24\", \"0.0.0.0/0\"",
                    "type": "string"
                },
                "srcPorts": {
                    "description": "e.g., \"80\", \"80,443\", \"1024-65535\", \"*\" (for all ports)",
                    "type": "string"
                }
            }
        },
        "onpremisemodel.GatewayProperty": {
            "type": "object",
            "properties": {
                "interfaceName": {
                    "description": "Name of the network interface associated with the gateway",
                    "type": "string"
                },
                "ip": {
                    "description": "IP address of the gateway",
                    "type": "string"
                },
                "machineId": {
                    "description": "Unique identifier for the machine (e.g., UUID)",
                    "type": "string"
                }
            }
        },
        "onpremisemodel.MemoryProperty": {
            "type": "object",
            "required": [
                "totalSize",
                "type"
            ],
            "properties": {
                "available": {
                    "description": "Unit GiB",
                    "type": "integer"
                },
                "totalSize": {
                    "description": "Unit GiB",
                    "type": "integer",
                    "example": 128
                },
                "type": {
                    "type": "string",
                    "example": "DDR4"
                },
                "used": {
                    "description": "Unit GiB",
                    "type": "integer"
                }
            }
        },
        "onpremisemodel.NetworkDetail": {
            "type": "object",
            "properties": {
                "cidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultGateways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onpremisemodel.GatewayProperty"
                    }
                }
            }
        },
        "onpremisemodel.NetworkInterfaceProperty": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "ipv4CidrBlocks": {
                    "description": "IPv4 address with prefix length (e.g., 192.168.0.21/24), instead of inet addr, Bcast, and Mask",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6CidrBlocks": {
                    "description": "IPv6 address with prefix length (e.g., \"2001:db8::1/64\")",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macAddress": {
                    "description": "MAC address",
                    "type": "string"
                },
                "mtu": {
                    "description": "Maximum Transmission Unit (MTU) in bytes",
                    "type": "integer"
                },
                "name": {
                    "description": "Interface name (e.g., eth0, ens01, enp0s3)",
                    "type": "string"
                },
                "state": {
                    "description": "Interface state (e.g., UP, DOWN)",
                    "type": "string"
                }
            }
        },
        "onpremisemodel.NetworkProperty": {
            "type": "object",
            "properties": {
                "ipv4Networks": {
                    "$ref": "#/definitions/onpremisemodel.NetworkDetail"
                },
                "ipv6Networks": {
                    "description": "TBD",
                    "allOf": [
                        {
                            "$ref": "#/definitions/onpremisemodel.NetworkDetail"
                        }
                    ]
                }
            }
        },
        "onpremisemodel.OnpremInfra": {
            "type": "object",
            "required": [
                "servers"
            ],
            "properties": {
                "network": {
                    "$ref": "#/definitions/onpremisemodel.NetworkProperty"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onpremisemodel.ServerProperty"
                    }
                }
            }
        },
        "onpremisemodel.OsProperty": {
            "type": "object",
            "required": [
                "prettyName"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "ubuntu"
                },
                "idLike": {
                    "type": "string",
                    "example": "debian"
                },
                "name": {
                    "type": "string",
                    "example": "Ubuntu"
                },
                "prettyName": {
                    "description": "Pretty name",
                    "type": "string",
                    "example": "Ubuntu 22.04.3 LTS"
                },
                "version": {
                    "description": "Full version string",
                    "type": "string",
                    "example": "22.04.3 LTS (Jammy Jellyfish)"
                },
                "versionCodename": {
                    "type": "string",
                    "example": "jammy"
                },
                "versionId": {
                    "type": "string",
                    "example": "22.04"
                }
            }
        },
        "onpremisemodel.RouteProperty": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination network, expressed in CIDR format",
                    "type": "string"
                },
                "gateway": {
                    "description": "Gateway address to which packets are forwarded",
                    "type": "string"
                },
                "interface": {
                    "description": "Network interface associated with the route",
                    "type": "string"
                },
                "linkState": {
                    "description": "Link state of the route (e.g., UP, DOWN)",
                    "type": "string"
                },
                "metric": {
                    "description": "Metric value indicating the priority of the route",
                    "type": "integer"
                },
                "protocol": {
                    "description": "Protocol used to set the route (e.g., kernel, static)",
                    "type": "string"
                },
                "scope": {
                    "description": "Scope of the route (e.g., global, link, host)",
                    "type": "string"
                },
                "source": {
                    "description": "Optionally stores the source address (used for policy-based routing)",
                    "type": "string"
                }
            }
        },
        "onpremisemodel.ServerProperty": {
            "type": "object",
            "properties": {
                "cpu": {
                    "$ref": "#/definitions/onpremisemodel.CpuProperty"
                },
                "dataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onpremisemodel.DiskProperty"
                    }
                },
                "firewallTable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onpremisemodel.FirewallRuleProperty"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onpremisemodel.NetworkInterfaceProperty"
                    }
                },
                "machineId": {
                    "description": "Unique identifier for the server (e.g., UUID)",
                    "type": "string"
                },
                "memory": {
                    "$ref": "#/definitions/onpremisemodel.MemoryProperty"
                },
                "os": {
                    "$ref": "#/definitions/onpremisemodel.OsProperty"
                },
                "rootDisk": {
                    "$ref": "#/definitions/onpremisemodel.DiskProperty"
                },
                "routingTable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onpremisemodel.RouteProperty"
                    }
                }
            }
        },
        "recommendation.Kubernetes": {
            "type": "object",
            "properties": {
                "node_count": {
                    "$ref": "#/definitions/recommendation.NodeCount"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recommendation.Node"
                    }
                },
                "workloads": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "recommendation.KubernetesInfoList": {
            "type": "object",
            "required": [
                "servers"
            ],
            "properties": {
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recommendation.Kubernetes"
                    }
                }
            }
        },
        "recommendation.Node": {
            "type": "object",
            "properties": {
                "addresses": {},
                "labels": {},
                "name": {},
                "node_info": {},
                "node_spec": {
                    "$ref": "#/definitions/recommendation.NodeSpec"
                },
                "type": {
                    "$ref": "#/definitions/recommendation.NodeType"
                }
            }
        },
        "recommendation.NodeCount": {
            "type": "object",
            "properties": {
                "control_plane": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "worker": {
                    "type": "integer"
                }
            }
        },
        "recommendation.NodeSpec": {
            "type": "object",
            "properties": {
                "cpu": {
                    "description": "cores",
                    "type": "integer"
                },
                "ephemeral_storage": {
                    "description": "MiB",
                    "type": "integer"
                },
                "memory": {
                    "description": "MiB",
                    "type": "integer"
                }
            }
        },
        "recommendation.NodeType": {
            "type": "string",
            "enum": [
                "control-plane",
                "worker"
            ],
            "x-enum-varnames": [
                "NodeTypeControlPlane",
                "NodeTypeWorker"
            ]
        },
        "resource.RestGetAllSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "securityGroup": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SecurityGroupInfo"
                    }
                }
            }
        },
        "resource.RestGetAllSshKeyResponse": {
            "type": "object",
            "properties": {
                "sshKey": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SshKeyInfo"
                    }
                }
            }
        },
        "resource.RestGetAllVNetResponse": {
            "type": "object",
            "properties": {
                "vNet": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.VNetInfo"
                    }
                }
            }
        },
        "tbclient.Bucket": {
            "type": "object",
            "properties": {
                "creationDate": {
                    "type": "string",
                    "example": "2025-09-04T04:18:06Z"
                },
                "name": {
                    "type": "string",
                    "example": "spider-test-bucket"
                }
            }
        },
        "tbclient.Buckets": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tbclient.Bucket"
                    }
                }
            }
        },
        "tbclient.ListAllMyBucketsResult": {
            "type": "object",
            "properties": {
                "buckets": {
                    "$ref": "#/definitions/tbclient.Buckets"
                },
                "owner": {
                    "$ref": "#/definitions/tbclient.Owner"
                }
            }
        },
        "tbclient.ListBucketResult": {
            "type": "object",
            "properties": {
                "isTruncated": {
                    "type": "boolean",
                    "example": false
                },
                "marker": {
                    "type": "string",
                    "example": ""
                },
                "maxKeys": {
                    "type": "integer",
                    "example": 1000
                },
                "name": {
                    "type": "string",
                    "example": "spider-test-bucket"
                },
                "prefix": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "tbclient.Owner": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string",
                    "example": "aws-ap-northeast-2"
                },
                "id": {
                    "type": "string",
                    "example": "aws-ap-northeast-2"
                }
            }
        },
        "transx.DataMigrationModel": {
            "type": "object",
            "required": [
                "destination",
                "destinationTransferOptions",
                "source",
                "sourceTransferOptions"
            ],
            "properties": {
                "destination": {
                    "description": "Destination endpoint configuration",
                    "allOf": [
                        {
                            "$ref": "#/definitions/transx.EndpointDetails"
                        }
                    ]
                },
                "destinationTransferOptions": {
                    "description": "Destination-specific transfer options",
                    "allOf": [
                        {
                            "$ref": "#/definitions/transx.TransferOptions"
                        }
                    ]
                },
                "source": {
                    "description": "Source endpoint configuration",
                    "allOf": [
                        {
                            "$ref": "#/definitions/transx.EndpointDetails"
                        }
                    ]
                },
                "sourceTransferOptions": {
                    "description": "Source-specific transfer options",
                    "allOf": [
                        {
                            "$ref": "#/definitions/transx.TransferOptions"
                        }
                    ]
                }
            }
        },
        "transx.EndpointDetails": {
            "type": "object",
            "required": [
                "dataPath"
            ],
            "properties": {
                "backupCmd": {
                    "description": "Command execution",
                    "type": "string"
                },
                "dataPath": {
                    "description": "Data location (required)",
                    "type": "string"
                },
                "endpoint": {
                    "description": "Endpoint configuration (auto-detects protocol based on provided fields)",
                    "type": "string"
                },
                "port": {
                    "description": "Port for SSH host/IP (default: 22) or Object Storage API endpoint (default: 1024)",
                    "type": "integer"
                },
                "restoreCmd": {
                    "description": "Restore command string to be executed on this endpoint",
                    "type": "string"
                }
            }
        },
        "transx.FilterOption": {
            "type": "object",
            "properties": {
                "exclude": {
                    "description": "Patterns to exclude (e.g., \"*.log\", \"temp/**\", \".git/**\")",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "include": {
                    "description": "Patterns to include (e.g., \"*.txt\", \"data/**\")",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "transx.ObjectStorageOption": {
            "type": "object",
            "required": [
                "accessKeyId"
            ],
            "properties": {
                "accessKeyId": {
                    "description": "Common authentication (REQUIRED - must be provided by user)",
                    "type": "string"
                },
                "client": {
                    "description": "Client selection",
                    "type": "string",
                    "default": "spider"
                },
                "expiresIn": {
                    "description": "Presigned URL configuration (spider client only)",
                    "type": "integer",
                    "default": 3600
                },
                "filter": {
                    "description": "File filtering options (applied after listing objects, before upload/download)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/transx.FilterOption"
                        }
                    ]
                },
                "maxRetries": {
                    "description": "Maximum number of retry attempts (default: 3)",
                    "type": "integer",
                    "default": 3
                },
                "region": {
                    "description": "AWS region (for minio client, default: \"us-east-1\")",
                    "type": "string",
                    "default": "us-east-1"
                },
                "secretAccessKey": {
                    "description": "AWS Secret Access Key (REQUIRED for minio client)",
                    "type": "string"
                },
                "timeout": {
                    "description": "HTTP request configuration (optional)",
                    "type": "integer",
                    "default": 300
                },
                "useSSL": {
                    "description": "Use HTTPS (default: true)",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "transx.RsyncOption": {
            "type": "object",
            "properties": {
                "archive": {
                    "description": "-a, --archive: Archive mode; equals -rlptgoD (no -H,-A,-X)",
                    "type": "boolean",
                    "default": true
                },
                "compress": {
                    "description": "Rsync-specific options",
                    "type": "boolean",
                    "default": true
                },
                "connectTimeout": {
                    "description": "SSH connection timeout in seconds",
                    "type": "integer",
                    "default": 30
                },
                "delete": {
                    "description": "--delete: Delete extraneous files from dest dirs",
                    "type": "boolean",
                    "default": false
                },
                "dryRun": {
                    "description": "Perform a trial run with no changes made",
                    "type": "boolean",
                    "default": false
                },
                "filter": {
                    "description": "File filtering options (include/exclude patterns) - use nested structure for better organization",
                    "allOf": [
                        {
                            "$ref": "#/definitions/transx.FilterOption"
                        }
                    ]
                },
                "insecureSkipHostKeyVerification": {
                    "description": "InsecureSkipHostKeyVerification, if true, relaxes host key checking for SSH connections.\nAdds \"-o StrictHostKeyChecking=accept-new -o UserKnownHostsFile=/dev/null\" options.\nWarning: This can be a security risk and should only be used in trusted environments.",
                    "type": "boolean",
                    "default": false
                },
                "progress": {
                    "description": "Show progress during transfer",
                    "type": "boolean",
                    "default": false
                },
                "rsyncPath": {
                    "description": "Path to the rsync executable (if empty, uses system PATH)",
                    "type": "string",
                    "default": "rsync"
                },
                "sshPrivateKeyPath": {
                    "description": "SSH private key path",
                    "type": "string"
                },
                "transferDirContentsOnly": {
                    "description": "TransferDirContentsOnly, if true, adds a trailing slash to source paths\nto transfer only the contents of the directory and not the directory itself.",
                    "type": "boolean",
                    "default": false
                },
                "username": {
                    "description": "SSH connection \u0026 authentication options (integrated)",
                    "type": "string"
                },
                "verbose": {
                    "description": "Transfer behavior options",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "transx.TransferOptions": {
            "type": "object",
            "required": [
                "method"
            ],
            "properties": {
                "method": {
                    "description": "Transfer method specification (required)",
                    "type": "string"
                },
                "objectStorageOptions": {
                    "description": "Object Storage-specific options (CB-Spider, AWS S3, etc.)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/transx.ObjectStorageOption"
                        }
                    ]
                },
                "rsyncOptions": {
                    "description": "Rsync-specific options",
                    "allOf": [
                        {
                            "$ref": "#/definitions/transx.RsyncOption"
                        }
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "▶▶▶ CB-Tumblebug REST API (access via Beetle's reverse proxy)",
        "url": "http://localhost:8056/tumblebug/api/index.html"
    }
}