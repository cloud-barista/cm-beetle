// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/cloud-barista/cm-beetle/issues/new/choose"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/httpVersion": {
            "get": {
                "description": "Checks and logs the HTTP version of the incoming request to the server console.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Check HTTP version of incoming request",
                "operationId": "CheckHTTPVersion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/mci": {
            "get": {
                "description": "Get the migrated multi-cloud infrastructure (MCI)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Get the migrated multi-cloud infrastructure (MCI)",
                "operationId": "ListInfra",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "status",
                            "id"
                        ],
                        "type": "string",
                        "default": "status",
                        "description": "Option for getting the migrated multi-cloud infrastructure",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The info list of the migrated multi-cloud infrastructure (MCI)",
                        "schema": {
                            "$ref": "#/definitions/migration.MciInfoList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Migrate an infrastructure to the multi-cloud infrastructure (MCI) with defaults.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Migrate an infrastructure to the multi-cloud infrastructure (MCI) with defaults",
                "operationId": "MigrateInfra",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Specify the information for the targeted mulci-cloud infrastructure (MCI)",
                        "name": "mciInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated to the multi-cloud infrastructure",
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/mci/{mciId}": {
            "get": {
                "description": "Get the migrated multi-cloud infrastructure (MCI)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Get the migrated multi-cloud infrastructure (MCI)",
                "operationId": "GetInfra",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mmci01",
                        "description": "Migrated Multi-Cloud Infrastructure (MCI) ID",
                        "name": "mciId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The migrated multi-cloud infrastructure (MCI) information",
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the migrated mult-cloud infrastructure (MCI)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Delete the migrated mult-cloud infrastructure (MCI)",
                "operationId": "DeleteInfra",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "mmci01",
                        "description": "Migrated Multi-Cloud Infrastructure (MCI) ID",
                        "name": "mciId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "terminate",
                            "force"
                        ],
                        "type": "string",
                        "default": "terminate",
                        "description": "Option for deletion",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of deleting the migrated multi-cloud infrastructure (MCI)",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/mciWithDefaults": {
            "post": {
                "description": "Migrate an infrastructure to the multi-cloud infrastructure (MCI) with defaults.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Infrastructure"
                ],
                "summary": "Migrate an infrastructure to the multi-cloud infrastructure (MCI) with defaults",
                "operationId": "MigrateInfraWithDefaults",
                "parameters": [
                    {
                        "type": "string",
                        "default": "mig01",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Specify the information for the targeted mulci-cloud infrastructure (MCI)",
                        "name": "mciInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraWithDefaultsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated to the multi-cloud infrastructure",
                        "schema": {
                            "$ref": "#/definitions/controller.MigrateInfraWithDefaultsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/securityGroup": {
            "get": {
                "description": "Get the list of all migrated security groups in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "List all migrated security groups",
                "operationId": "ListMigratedSecurityGroups",
                "parameters": [
                    {
                        "type": "string",
                        "default": "default",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: systemLabel)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: Registered from CSP resource)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/resource.RestGetAllSecurityGroupResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/model.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new migrated security group in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Create a migrated security group",
                "operationId": "CreateMigratedSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "default": "default",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: [required params for register] connectionName, name, vNetId, cspResourceId",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "description": "Details for an securityGroup object",
                        "name": "securityGroupReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TbSecurityGroupReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TbSecurityGroupInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/securityGroup/{sgId}": {
            "get": {
                "description": "Get details of a specific migrated security group in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Get a specific migrated security group",
                "operationId": "GetMigratedSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Security Group ID",
                        "name": "sgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TbSecurityGroupInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific migrated security group in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Delete a migrated security group",
                "operationId": "DeleteMigratedSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "default": "default",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Security Group ID",
                        "name": "securityGroupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/sshKey": {
            "get": {
                "description": "Get the list of all migrated SSH keys in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "List all migrated SSH keys",
                "operationId": "ListMigratedSSHKeys",
                "parameters": [
                    {
                        "type": "string",
                        "default": "default",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "id"
                        ],
                        "type": "string",
                        "description": "Option",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field key for filtering (ex: systemLabel)",
                        "name": "filterKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field value for filtering (ex: Registered from CSP resource)",
                        "name": "filterVal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/resource.RestGetAllSshKeyResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/model.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new migrated SSH key in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Create a migrated SSH key",
                "operationId": "CreateMigratedSSHKey",
                "parameters": [
                    {
                        "type": "string",
                        "default": "default",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "register"
                        ],
                        "type": "string",
                        "description": "Option: [required params for register] connectionName, name, cspKeyId",
                        "name": "option",
                        "in": "query"
                    },
                    {
                        "description": "Details for an SSH key object",
                        "name": "sshKeyReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TbSshKeyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TbSshKeyInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/sshKey/{sshKeyId}": {
            "get": {
                "description": "Get details of a specific migrated SSH key in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Get a specific migrated SSH key",
                "operationId": "GetMigratedSSHKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SSH Key ID",
                        "name": "sshKeyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TbSshKeyInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific migrated SSH key in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Delete a migrated SSH key",
                "operationId": "DeleteMigratedSSHKey",
                "parameters": [
                    {
                        "type": "string",
                        "default": "default",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SSH Key ID",
                        "name": "sshKeyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/vNet": {
            "get": {
                "description": "Get the list of all migrated virtual networks in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "List all migrated virtual networks",
                "operationId": "ListMigratedVNets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different return structures by the given option param",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[DEFAULT]": {
                                            "$ref": "#/definitions/resource.RestGetAllVNetResponse"
                                        },
                                        "[ID]": {
                                            "$ref": "#/definitions/model.IdList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new migrated virtual network in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Create a migrated virtual network",
                "operationId": "CreateVNet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Virtual Network creation request",
                        "name": "vNetReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TbVNetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TbVNetInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/migration/ns/{nsId}/resources/vNet/{vNetId}": {
            "get": {
                "description": "Get details of a specific virtual network in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Get a specific migrated virtual network",
                "operationId": "GetMigratedVNet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Virtual Network ID",
                        "name": "vNetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TbVNetInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific migrated virtual network in the namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Resources for VM infrastructure"
                ],
                "summary": "Delete a migrated virtual network",
                "operationId": "DeleteMigratedVNet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Virtual Network ID",
                        "name": "vNetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "withsubnets",
                            "refine",
                            "force"
                        ],
                        "type": "string",
                        "description": "Action",
                        "name": "action",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "description": "Check Beetle is ready",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Check Beetle is ready",
                "operationId": "GetReadyz",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    }
                }
            }
        },
        "/recommendation/containerInfra": {
            "post": {
                "description": "Recommend an appropriate container infrastructure for container-based workloads\n\n[Note] ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` are required.\n- ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` can be set in the query parameter or the request body.\n- If both are set, the values in the request body take precedence.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Infrastructure"
                ],
                "summary": "Recommend an appropriate container infrastructure for cloud migration",
                "operationId": "RecommendContainerInfra",
                "parameters": [
                    {
                        "description": "Specify the source container infrastructure",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended container infrastructure",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendInfraResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/mci": {
            "post": {
                "description": "Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) for cloud migration\n\n[Note] ` + "`" + `desiredCsp` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` are required.\n- ` + "`" + `desiredCsp` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` can set on the query parameter or the request body.\n\n- If desiredCsp and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Infrastructure"
                ],
                "summary": "Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) for cloud migration",
                "operationId": "RecommendVMInfra",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredCsp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended infrastructure",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/mciWithDefaults": {
            "post": {
                "description": "Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) with defaults for cloud migration\n\n[Note] ` + "`" + `desiredCsp` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` are required.\n- ` + "`" + `desiredCsp` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` can set on the query parameter or the request body.\n\n- If desiredCsp and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Infrastructure"
                ],
                "summary": "Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) with defaults for cloud migration",
                "operationId": "RecommendVMInfraWithDefaults",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredCsp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended infrastructure",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/resource/securityGroups": {
            "post": {
                "description": "Recommend an appropriate security group for cloud migration\n\n[Note] ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` are required.\n- ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` can set on the query parameter or the request body.\n\n- If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Resources for VM infrastructure"
                ],
                "summary": "Recommend an appropriate security group for cloud migration",
                "operationId": "RecommendSecurityGroups",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended security groups",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendSecurityGroupResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/resource/vNet": {
            "post": {
                "description": "Recommend an appropriate virtual network for cloud migration\n\n[Note] ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` are required.\n- ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` can set on the query parameter or the request body.\n\n- If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Resources for VM infrastructure"
                ],
                "summary": "Recommend an appropriate virtual network for cloud migration",
                "operationId": "RecommendVNet",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended vNet",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVNetResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/resource/vmOsImages": {
            "post": {
                "description": "Recommend an appropriate OS image for cloud migration\n\n[Note] ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` are required.\n- ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` can set on the query parameter or the request body.\n\n- If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Resources for VM infrastructure"
                ],
                "summary": "Recommend an appropriate OS image for cloud migration",
                "operationId": "RecommendVmOsImages",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended VM OS images",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmOsImageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/recommendation/resource/vmSpecs": {
            "post": {
                "description": "Recommend an appropriate VM specification for cloud migration\n\n[Note] ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` are required.\n- ` + "`" + `desiredProvider` + "`" + ` and ` + "`" + `desiredRegion` + "`" + ` can set on the query parameter or the request body.\n\n- If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Recommendation] Resources for VM infrastructure"
                ],
                "summary": "Recommend an appropriate VM specification for cloud migration",
                "operationId": "RecommendVmSpecs",
                "parameters": [
                    {
                        "description": "Specify the your infrastructure to be migrated",
                        "name": "UserInfra",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmInfraRequest"
                        }
                    },
                    {
                        "enum": [
                            "aws",
                            "azure",
                            "gcp",
                            "ncp"
                        ],
                        "type": "string",
                        "default": "aws",
                        "description": "Provider (e.g., aws, azure, gcp)",
                        "name": "desiredProvider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ap-northeast-2",
                        "description": "Region (e.g., ap-northeast-2)",
                        "name": "desiredRegion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of recommended VM specifications",
                        "schema": {
                            "$ref": "#/definitions/controller.RecommendVmSpecResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/test/tracing": {
            "get": {
                "description": "Test tracing to Tumblebug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test] Utility"
                ],
                "summary": "Test tracing to Tumblebug",
                "operationId": "TestTracing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Custom request ID (NOTE: It will be used as a trace ID.)",
                        "name": "X-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/common.SimpleMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.SimpleMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Any message"
                }
            }
        },
        "common.SimpleMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Any message"
                }
            }
        },
        "controller.JSONResult": {
            "type": "object"
        },
        "controller.MigrateInfraRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetSecurityGroupList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbSecurityGroupReq"
                    }
                },
                "targetSshKey": {
                    "$ref": "#/definitions/model.TbSshKeyReq"
                },
                "targetVNet": {
                    "$ref": "#/definitions/model.TbVNetReq"
                },
                "targetVmInfra": {
                    "$ref": "#/definitions/model.TbMciReq"
                },
                "targetVmOsImageList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbImageInfo"
                    }
                },
                "targetVmSpecList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbSpecInfo"
                    }
                }
            }
        },
        "controller.MigrateInfraResponse": {
            "type": "object"
        },
        "controller.MigrateInfraWithDefaultsRequest": {
            "type": "object",
            "required": [
                "name",
                "vm"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Made in CB-TB"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:no)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "mci01"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.MciCmdReq"
                        }
                    ]
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": ""
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbVmDynamicReq"
                    }
                }
            }
        },
        "controller.MigrateInfraWithDefaultsResponse": {
            "type": "object",
            "properties": {
                "configureCloudAdaptiveNetwork": {
                    "description": "ConfigureCloudAdaptiveNetwork is an option to configure Cloud Adaptive Network (CLADNet) ([yes/no] default:yes)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "yes"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:no)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "newVmList": {
                    "description": "List of IDs for new VMs. Return IDs if the VMs are newly added. This field should be used for return body only.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "placementAlgo": {
                    "type": "string"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.MciCmdReq"
                        }
                    ]
                },
                "postCommandResult": {
                    "description": "PostCommandResult is the result of the command for bootstraping the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.MciSshCmdResult"
                        }
                    ]
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusCount": {
                    "$ref": "#/definitions/model.StatusCountInfo"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "string",
                    "example": "Failed because ..."
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbVmInfo"
                    }
                }
            }
        },
        "controller.RecommendInfraRequest": {
            "type": "object",
            "required": [
                "onpremiseInfraModel"
            ],
            "properties": {
                "desiredProvider": {
                    "type": "string",
                    "example": "aws"
                },
                "desiredRegion": {
                    "type": "string",
                    "example": "ap-northeast-2"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/inframodel.OnpremInfra"
                }
            }
        },
        "controller.RecommendInfraResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetInfra": {
                    "$ref": "#/definitions/model.TbMciDynamicReq"
                }
            }
        },
        "controller.RecommendSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "targetSecurityGroupList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recommendation.RecommendedSecurityGroup"
                    }
                }
            }
        },
        "controller.RecommendVNetResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "targetVNetList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recommendation.RecommendedVNet"
                    }
                }
            }
        },
        "controller.RecommendVmInfraRequest": {
            "type": "object",
            "properties": {
                "desiredCspAndRegionPair": {
                    "$ref": "#/definitions/recommendation.CspRegionPair"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/inframodel.OnpremInfra"
                }
            }
        },
        "controller.RecommendVmInfraResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetInfra": {
                    "$ref": "#/definitions/model.TbMciDynamicReq"
                }
            }
        },
        "controller.RecommendVmOsImageResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "recommendedVmOsImageList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recommendation.RecommendedVmOsImage"
                    }
                }
            }
        },
        "controller.RecommendVmSpecResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "recommendedVmSpecList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recommendation.RecommendedVmSpec"
                    }
                }
            }
        },
        "github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "Any details"
                },
                "list": {
                    "type": "array",
                    "items": {}
                },
                "object": {
                    "type": "object",
                    "additionalProperties": true
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "text": {
                    "type": "string",
                    "example": "Any text"
                }
            }
        },
        "inframodel.CpuProperty": {
            "type": "object",
            "required": [
                "cores",
                "cpus",
                "threads"
            ],
            "properties": {
                "architecture": {
                    "type": "string",
                    "example": "x86_64"
                },
                "cores": {
                    "description": "Number of physical cores per CPU",
                    "type": "integer",
                    "example": 18
                },
                "cpus": {
                    "description": "Number of physical CPUs (sockets)",
                    "type": "integer",
                    "example": 2
                },
                "maxSpeed": {
                    "description": "Maximum speed in GHz",
                    "type": "number",
                    "example": 3.6
                },
                "model": {
                    "type": "string",
                    "example": "Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz"
                },
                "threads": {
                    "description": "Number of logical CPUs (threads) per CPU with hyper-threading enabled",
                    "type": "integer",
                    "example": 36
                },
                "vendor": {
                    "type": "string",
                    "example": "GenuineIntel"
                }
            }
        },
        "inframodel.DiskProperty": {
            "type": "object",
            "required": [
                "label",
                "totalSize",
                "type"
            ],
            "properties": {
                "available": {
                    "description": "Unit GiB",
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "totalSize": {
                    "description": "Unit GiB",
                    "type": "integer",
                    "example": 1024
                },
                "type": {
                    "description": "SSD, HDD",
                    "type": "string",
                    "example": "SSD"
                },
                "used": {
                    "description": "Unit GiB",
                    "type": "integer"
                }
            }
        },
        "inframodel.MemoryProperty": {
            "type": "object",
            "required": [
                "totalSize",
                "type"
            ],
            "properties": {
                "available": {
                    "description": "Unit GiB",
                    "type": "integer"
                },
                "totalSize": {
                    "description": "Unit GiB",
                    "type": "integer",
                    "example": 128
                },
                "type": {
                    "type": "string",
                    "example": "DDR4"
                },
                "used": {
                    "description": "Unit GiB",
                    "type": "integer"
                }
            }
        },
        "inframodel.NetworkInterfaceProperty": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "ipv4CidrBlocks": {
                    "description": "IPv4 address with prefix length (e.g., 192.168.0.21/24), instead of inet addr, Bcast, and Mask",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6CidrBlocks": {
                    "description": "IPv6 address with prefix length (e.g., \"2001:db8::1/64\")",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macAddress": {
                    "description": "MAC address",
                    "type": "string"
                },
                "mtu": {
                    "description": "Maximum Transmission Unit (MTU) in bytes",
                    "type": "integer"
                },
                "name": {
                    "description": "Interface name (e.g., eth0, ens01, enp0s3)",
                    "type": "string"
                },
                "state": {
                    "description": "Interface state (e.g., UP, DOWN)",
                    "type": "string"
                }
            }
        },
        "inframodel.NetworkProperty": {
            "type": "object",
            "properties": {
                "ipv4Networks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "172.26.240.0/20"
                    ]
                },
                "ipv6Networks": {
                    "description": "TBD",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "inframodel.OnpremInfra": {
            "type": "object",
            "required": [
                "servers"
            ],
            "properties": {
                "network": {
                    "$ref": "#/definitions/inframodel.NetworkProperty"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inframodel.ServerProperty"
                    }
                }
            }
        },
        "inframodel.OsProperty": {
            "type": "object",
            "required": [
                "prettyName"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "ubuntu"
                },
                "idLike": {
                    "type": "string",
                    "example": "debian"
                },
                "name": {
                    "type": "string",
                    "example": "Ubuntu"
                },
                "prettyName": {
                    "description": "Pretty name",
                    "type": "string",
                    "example": "Ubuntu 22.04.3 LTS"
                },
                "version": {
                    "description": "Full version string",
                    "type": "string",
                    "example": "22.04.3 LTS (Jammy Jellyfish)"
                },
                "versionCodename": {
                    "type": "string",
                    "example": "jammy"
                },
                "versionId": {
                    "type": "string",
                    "example": "22.04"
                }
            }
        },
        "inframodel.RouteProperty": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination network, expressed in CIDR format",
                    "type": "string"
                },
                "gateway": {
                    "description": "Gateway address to which packets are forwarded",
                    "type": "string"
                },
                "interface": {
                    "description": "Network interface associated with the route",
                    "type": "string"
                },
                "linkState": {
                    "description": "Link state of the route (e.g., UP, DOWN)",
                    "type": "string"
                },
                "metric": {
                    "description": "Metric value indicating the priority of the route",
                    "type": "integer"
                },
                "protocol": {
                    "description": "Protocol used to set the route (e.g., kernel, static)",
                    "type": "string"
                },
                "scope": {
                    "description": "Scope of the route (e.g., global, link, host)",
                    "type": "string"
                },
                "source": {
                    "description": "Optionally stores the source address (used for policy-based routing)",
                    "type": "string"
                }
            }
        },
        "inframodel.ServerProperty": {
            "type": "object",
            "properties": {
                "cpu": {
                    "$ref": "#/definitions/inframodel.CpuProperty"
                },
                "dataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inframodel.DiskProperty"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inframodel.NetworkInterfaceProperty"
                    }
                },
                "memory": {
                    "$ref": "#/definitions/inframodel.MemoryProperty"
                },
                "os": {
                    "$ref": "#/definitions/inframodel.OsProperty"
                },
                "rootDisk": {
                    "$ref": "#/definitions/inframodel.DiskProperty"
                },
                "routingTable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inframodel.RouteProperty"
                    }
                }
            }
        },
        "migration.IdList": {
            "type": "object",
            "properties": {
                "idList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "migration.MciInfoList": {
            "type": "object",
            "properties": {
                "mci": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MciStatusInfo"
                    }
                }
            }
        },
        "model.BastionNode": {
            "type": "object",
            "properties": {
                "mciId": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                }
            }
        },
        "model.ConnConfig": {
            "type": "object",
            "properties": {
                "configName": {
                    "type": "string"
                },
                "credentialHolder": {
                    "type": "string"
                },
                "credentialName": {
                    "type": "string"
                },
                "driverName": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "regionDetail": {
                    "$ref": "#/definitions/model.RegionDetail"
                },
                "regionRepresentative": {
                    "type": "boolean"
                },
                "regionZoneInfo": {
                    "$ref": "#/definitions/model.RegionZoneInfo"
                },
                "regionZoneInfoName": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "model.IdList": {
            "type": "object",
            "properties": {
                "output": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.ImageStatus": {
            "type": "string",
            "enum": [
                "Available",
                "Unavailable",
                "Deprecated",
                "NA"
            ],
            "x-enum-varnames": [
                "ImageAvailable",
                "ImageUnavailable",
                "ImageDeprecated",
                "ImageNA"
            ]
        },
        "model.KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.Location": {
            "type": "object",
            "properties": {
                "display": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "model.MciCmdReq": {
            "type": "object",
            "required": [
                "command"
            ],
            "properties": {
                "command": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "client_ip=$(echo $SSH_CLIENT | awk '{print $1}'); echo SSH client IP is: $client_ip"
                    ]
                },
                "userName": {
                    "type": "string",
                    "example": "cb-user"
                }
            }
        },
        "model.MciSshCmdResult": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SshCmdResult"
                    }
                }
            }
        },
        "model.MciStatusInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:yes)",
                    "type": "string",
                    "example": "[yes, no]"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "masterIp": {
                    "type": "string",
                    "example": "32.201.134.113"
                },
                "masterSSHPort": {
                    "type": "string"
                },
                "masterVmId": {
                    "type": "string",
                    "example": "vm-asiaeast1-cb-01"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "statusCount": {
                    "$ref": "#/definitions/model.StatusCountInfo"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbVmStatusInfo"
                    }
                }
            }
        },
        "model.OSArchitecture": {
            "type": "string",
            "enum": [
                "arm32",
                "arm64",
                "arm64_mac",
                "x86_32",
                "x86_64",
                "x86_32_mac",
                "x86_64_mac",
                "NA"
            ],
            "x-enum-varnames": [
                "ARM32",
                "ARM64",
                "ARM64_MAC",
                "X86_32",
                "X86_64",
                "X86_32_MAC",
                "X86_64_MAC",
                "ArchitectureNA"
            ]
        },
        "model.OSPlatform": {
            "type": "string",
            "enum": [
                "Linux/UNIX",
                "Windows",
                "NA"
            ],
            "x-enum-varnames": [
                "Linux_UNIX",
                "Windows",
                "PlatformNA"
            ]
        },
        "model.RegionDetail": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/model.Location"
                },
                "regionId": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.RegionInfo": {
            "type": "object",
            "properties": {
                "region": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "model.RegionZoneInfo": {
            "type": "object",
            "properties": {
                "assignedRegion": {
                    "type": "string"
                },
                "assignedZone": {
                    "type": "string"
                }
            }
        },
        "model.SimpleMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Any message"
                }
            }
        },
        "model.SshCmdResult": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "err": {},
                "mciId": {
                    "type": "string"
                },
                "stderr": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "stdout": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vmId": {
                    "type": "string"
                },
                "vmIp": {
                    "type": "string"
                }
            }
        },
        "model.StatusCountInfo": {
            "type": "object",
            "properties": {
                "countCreating": {
                    "description": "CountCreating is for counting Creating",
                    "type": "integer"
                },
                "countFailed": {
                    "description": "CountFailed is for counting Failed",
                    "type": "integer"
                },
                "countRebooting": {
                    "description": "CountRebooting is for counting Rebooting",
                    "type": "integer"
                },
                "countResuming": {
                    "description": "CountResuming is for counting Resuming",
                    "type": "integer"
                },
                "countRunning": {
                    "description": "CountRunning is for counting Running",
                    "type": "integer"
                },
                "countSuspended": {
                    "description": "CountSuspended is for counting Suspended",
                    "type": "integer"
                },
                "countSuspending": {
                    "description": "CountSuspending is for counting Suspending",
                    "type": "integer"
                },
                "countTerminated": {
                    "description": "CountTerminated is for counting Terminated",
                    "type": "integer"
                },
                "countTerminating": {
                    "description": "CountTerminating is for counting Terminating",
                    "type": "integer"
                },
                "countTotal": {
                    "description": "CountTotal is for Total VMs",
                    "type": "integer"
                },
                "countUndefined": {
                    "description": "CountUndefined is for counting Undefined",
                    "type": "integer"
                }
            }
        },
        "model.TbFirewallRuleInfo": {
            "type": "object",
            "required": [
                "direction",
                "fromPort",
                "ipprotocol",
                "toPort"
            ],
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "direction": {
                    "description": "` + "`" + `json:\"direction\"` + "`" + `",
                    "type": "string"
                },
                "fromPort": {
                    "description": "` + "`" + `json:\"fromPort\"` + "`" + `",
                    "type": "string"
                },
                "ipprotocol": {
                    "description": "` + "`" + `json:\"ipProtocol\"` + "`" + `",
                    "type": "string"
                },
                "toPort": {
                    "description": "` + "`" + `json:\"toPort\"` + "`" + `",
                    "type": "string"
                }
            }
        },
        "model.TbImageInfo": {
            "type": "object",
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string"
                },
                "cspImageName": {
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "description": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "fetchedTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "imageStatus": {
                    "description": "Available, Deprecated, NA",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.ImageStatus"
                        }
                    ],
                    "example": "Available"
                },
                "infraType": {
                    "description": "vm|k8s|kubernetes|container, etc.",
                    "type": "string"
                },
                "isGPUImage": {
                    "type": "boolean",
                    "default": false
                },
                "isKubernetesImage": {
                    "type": "boolean",
                    "default": false
                },
                "name": {
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "namespace": {
                    "description": "Composite primary key",
                    "type": "string",
                    "example": "default"
                },
                "osArchitecture": {
                    "description": "arm64, x86_64 etc.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.OSArchitecture"
                        }
                    ],
                    "example": "x86_64"
                },
                "osDiskSizeGB": {
                    "description": "10, 50, 100 etc.",
                    "type": "number",
                    "example": 50
                },
                "osDiskType": {
                    "description": "ebs, HDD, etc.",
                    "type": "string",
                    "example": "HDD"
                },
                "osDistribution": {
                    "description": "Ubuntu 22.04~, CentOS 8 etc.",
                    "type": "string",
                    "example": "Ubuntu 22.04~"
                },
                "osPlatform": {
                    "description": "Linux/UNIX, Windows, NA",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.OSPlatform"
                        }
                    ],
                    "example": "Linux/UNIX"
                },
                "osType": {
                    "type": "string",
                    "example": "ubuntu 22.04"
                },
                "providerName": {
                    "type": "string"
                },
                "regionList": {
                    "description": "Array field for supporting multiple regions",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "systemLabel": {
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                }
            }
        },
        "model.TbMciDynamicReq": {
            "type": "object",
            "required": [
                "name",
                "vm"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Made in CB-TB"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:no)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "mci01"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.MciCmdReq"
                        }
                    ]
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": ""
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbVmDynamicReq"
                    }
                }
            }
        },
        "model.TbMciReq": {
            "type": "object",
            "required": [
                "name",
                "vm"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Made in CB-TB"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:yes)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "mci01"
                },
                "placementAlgo": {
                    "type": "string"
                },
                "postCommand": {
                    "description": "PostCommand is for the command to bootstrap the VMs",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.MciCmdReq"
                        }
                    ]
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": ""
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbVmReq"
                    }
                }
            }
        },
        "model.TbSecurityGroupInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionConfig": {
                    "$ref": "#/definitions/model.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "description": {
                    "type": "string"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbFirewallRuleInfo"
                    }
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the Resource in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vNetId": {
                    "type": "string"
                }
            }
        },
        "model.TbSecurityGroupReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name",
                "vNetId"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is required to register object from CSP (option=register)",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "firewallRules": {
                    "description": "validate:\"required\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbFirewallRuleInfo"
                    }
                },
                "name": {
                    "type": "string"
                },
                "vNetId": {
                    "type": "string"
                }
            }
        },
        "model.TbSpecInfo": {
            "type": "object",
            "properties": {
                "acceleratorCount": {
                    "type": "integer"
                },
                "acceleratorMemoryGB": {
                    "type": "number"
                },
                "acceleratorModel": {
                    "type": "string"
                },
                "acceleratorType": {
                    "type": "string"
                },
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionName": {
                    "type": "string"
                },
                "costPerHour": {
                    "type": "number"
                },
                "cspSpecName": {
                    "description": "CspSpecName is name of the spec given by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "description": {
                    "type": "string"
                },
                "diskSizeGB": {
                    "type": "number"
                },
                "evaluationScore01": {
                    "type": "number"
                },
                "evaluationScore02": {
                    "type": "number"
                },
                "evaluationScore03": {
                    "type": "number"
                },
                "evaluationScore04": {
                    "type": "number"
                },
                "evaluationScore05": {
                    "type": "number"
                },
                "evaluationScore06": {
                    "type": "number"
                },
                "evaluationScore07": {
                    "type": "number"
                },
                "evaluationScore08": {
                    "type": "number"
                },
                "evaluationScore09": {
                    "type": "number"
                },
                "evaluationScore10": {
                    "type": "number"
                },
                "evaluationStatus": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "infraType": {
                    "description": "InfraType can be one of vm|k8s|kubernetes|container, etc.",
                    "type": "string"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "maxTotalStorageTiB": {
                    "type": "integer"
                },
                "memoryGiB": {
                    "type": "number"
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "namespace": {
                    "type": "string",
                    "example": "default"
                },
                "netBwGbps": {
                    "type": "integer"
                },
                "orderInFilteredResult": {
                    "type": "integer"
                },
                "osType": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "rootDiskSize": {
                    "type": "string"
                },
                "rootDiskType": {
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the Resource in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vCPU": {
                    "type": "integer"
                }
            }
        },
        "model.TbSshKeyInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectionConfig": {
                    "$ref": "#/definitions/model.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "description": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the Resource in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "username": {
                    "type": "string"
                },
                "verifiedUsername": {
                    "type": "string"
                }
            }
        },
        "model.TbSshKeyReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "Fields for \"Register existing SSH keys\" feature\nCspResourceId is required to register object from CSP (option=register)",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verifiedUsername": {
                    "type": "string"
                }
            }
        },
        "model.TbSubnetInfo": {
            "type": "object",
            "properties": {
                "bastionNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BastionNode"
                    }
                },
                "connectionConfig": {
                    "$ref": "#/definitions/model.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "cspVNetId": {
                    "description": "CspVNetId is vNet resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-45eb41e14121c550a"
                },
                "cspVNetName": {
                    "description": "CspVNetName is identifier to handle CSP vNet resource",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "ipv4_CIDR": {
                    "type": "string"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "model.TbSubnetReq": {
            "type": "object",
            "required": [
                "ipv4_CIDR",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "subnet00 managed by CB-Tumblebug"
                },
                "ipv4_CIDR": {
                    "type": "string",
                    "example": "10.0.1.0/24"
                },
                "name": {
                    "type": "string",
                    "example": "subnet00"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "model.TbVNetInfo": {
            "type": "object",
            "properties": {
                "associatedObjectList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cidrBlock": {
                    "type": "string"
                },
                "connectionConfig": {
                    "$ref": "#/definitions/model.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "isAutoGenerated": {
                    "type": "boolean"
                },
                "keyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetInfoList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbSubnetInfo"
                    }
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the Resource in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": "Managed by CB-Tumblebug"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                }
            }
        },
        "model.TbVNetReq": {
            "type": "object",
            "required": [
                "connectionName",
                "name"
            ],
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "example": "10.0.0.0/16"
                },
                "connectionName": {
                    "type": "string",
                    "example": "aws-ap-northeast-2"
                },
                "description": {
                    "type": "string",
                    "example": "vnet00 managed by CB-Tumblebug"
                },
                "name": {
                    "type": "string",
                    "example": "vnet00"
                },
                "subnetInfoList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbSubnetReq"
                    }
                }
            }
        },
        "model.TbVmDynamicReq": {
            "type": "object",
            "required": [
                "commonImage",
                "commonSpec"
            ],
            "properties": {
                "commonImage": {
                    "description": "CommonImage is field for id of a image in common namespace",
                    "type": "string",
                    "example": "ubuntu18.04"
                },
                "commonSpec": {
                    "description": "CommonSpec is field for id of a spec in common namespace",
                    "type": "string",
                    "example": "aws+ap-northeast-2+t2.small"
                },
                "connectionName": {
                    "description": "if ConnectionName is given, the VM tries to use associtated credential.\nif not, it will use predefined ConnectionName in Spec objects",
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "VM name or subGroup name if is (not empty) \u0026\u0026 (\u003e 0). If it is a group, actual VM name will be generated with -N postfix.",
                    "type": "string",
                    "example": "g1-1"
                },
                "rootDiskSize": {
                    "description": "\"default\", Integer (GB): [\"50\", ..., \"1000\"]",
                    "type": "string",
                    "default": "default",
                    "example": "default, 30, 42, ..."
                },
                "rootDiskType": {
                    "description": "\"\", \"default\", \"TYPE1\", AWS: [\"standard\", \"gp2\", \"gp3\"], Azure: [\"PremiumSSD\", \"StandardSSD\", \"StandardHDD\"], GCP: [\"pd-standard\", \"pd-balanced\", \"pd-ssd\", \"pd-extreme\"], ALIBABA: [\"cloud_efficiency\", \"cloud\", \"cloud_essd\"], TENCENT: [\"CLOUD_PREMIUM\", \"CLOUD_SSD\"]",
                    "type": "string",
                    "default": "default",
                    "example": "default, TYPE1, ..."
                },
                "subGroupSize": {
                    "description": "if subGroupSize is (not empty) \u0026\u0026 (\u003e 0), subGroup will be generated. VMs will be created accordingly.",
                    "type": "string",
                    "default": "1",
                    "example": "3"
                },
                "vmUserPassword": {
                    "type": "string"
                }
            }
        },
        "model.TbVmInfo": {
            "type": "object",
            "properties": {
                "addtionalDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.KeyValue"
                    }
                },
                "connectionConfig": {
                    "$ref": "#/definitions/model.ConnConfig"
                },
                "connectionName": {
                    "type": "string"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "string",
                    "example": "2022-11-10 23:00:00"
                },
                "cspImageName": {
                    "type": "string"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "cspSpecName": {
                    "type": "string"
                },
                "cspSshKeyId": {
                    "type": "string"
                },
                "cspSubnetId": {
                    "type": "string"
                },
                "cspVNetId": {
                    "type": "string"
                },
                "dataDiskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "imageId": {
                    "type": "string"
                },
                "label": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "location": {
                    "$ref": "#/definitions/model.Location"
                },
                "monAgentStatus": {
                    "description": "Montoring agent status",
                    "type": "string",
                    "example": "[installed, notInstalled, failed]"
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "networkAgentStatus": {
                    "description": "NetworkAgent status",
                    "type": "string",
                    "example": "[notInstalled, installing, installed, failed]"
                },
                "networkInterface": {
                    "type": "string"
                },
                "privateDNS": {
                    "type": "string"
                },
                "privateIP": {
                    "type": "string"
                },
                "publicDNS": {
                    "type": "string"
                },
                "publicIP": {
                    "type": "string"
                },
                "region": {
                    "description": "AWS, ex) {us-east1, us-east1-c} or {ap-northeast-2}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.RegionInfo"
                        }
                    ]
                },
                "resourceType": {
                    "description": "ResourceType is the type of the resource",
                    "type": "string"
                },
                "rootDiskName": {
                    "type": "string"
                },
                "rootDiskSize": {
                    "type": "string"
                },
                "rootDiskType": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specId": {
                    "type": "string"
                },
                "sshKeyId": {
                    "type": "string"
                },
                "sshPort": {
                    "type": "string"
                },
                "status": {
                    "description": "Required by CB-Tumblebug",
                    "type": "string"
                },
                "subGroupId": {
                    "description": "defined if the VM is in a group",
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "string",
                    "example": "Failed because ..."
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                },
                "vNetId": {
                    "type": "string"
                },
                "vmUserName": {
                    "type": "string"
                },
                "vmUserPassword": {
                    "type": "string"
                }
            }
        },
        "model.TbVmReq": {
            "type": "object",
            "required": [
                "connectionName",
                "imageId",
                "name",
                "securityGroupIds",
                "specId",
                "sshKeyId",
                "subnetId",
                "vNetId"
            ],
            "properties": {
                "connectionName": {
                    "type": "string",
                    "example": "testcloud01-seoul"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP (required for option=register)",
                    "type": "string",
                    "example": "i-014fa6ede6ada0b2c"
                },
                "dataDiskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "imageId": {
                    "description": "ImageType        string   ` + "`" + `json:\"imageType\"` + "`" + `",
                    "type": "string"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "VM name or subGroup name if is (not empty) \u0026\u0026 (\u003e 0). If it is a group, actual VM name will be generated with -N postfix.",
                    "type": "string",
                    "example": "g1-1"
                },
                "rootDiskSize": {
                    "description": "\"default\", Integer (GB): [\"50\", ..., \"1000\"]",
                    "type": "string",
                    "example": "default, 30, 42, ..."
                },
                "rootDiskType": {
                    "description": "\"\", \"default\", \"TYPE1\", AWS: [\"standard\", \"gp2\", \"gp3\"], Azure: [\"PremiumSSD\", \"StandardSSD\", \"StandardHDD\"], GCP: [\"pd-standard\", \"pd-balanced\", \"pd-ssd\", \"pd-extreme\"], ALIBABA: [\"cloud_efficiency\", \"cloud\", \"cloud_ssd\"], TENCENT: [\"CLOUD_PREMIUM\", \"CLOUD_SSD\"]",
                    "type": "string",
                    "example": "default, TYPE1, ..."
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "specId": {
                    "type": "string"
                },
                "sshKeyId": {
                    "type": "string"
                },
                "subGroupSize": {
                    "description": "if subGroupSize is (not empty) \u0026\u0026 (\u003e 0), subGroup will be generated. VMs will be created accordingly.",
                    "type": "string",
                    "example": "3"
                },
                "subnetId": {
                    "type": "string"
                },
                "vNetId": {
                    "type": "string"
                },
                "vmUserName": {
                    "type": "string"
                },
                "vmUserPassword": {
                    "type": "string"
                }
            }
        },
        "model.TbVmStatusInfo": {
            "type": "object",
            "properties": {
                "createdTime": {
                    "description": "Created time",
                    "type": "string",
                    "example": "2022-11-10 23:00:00"
                },
                "cspResourceId": {
                    "description": "CspResourceId is resource identifier managed by CSP",
                    "type": "string",
                    "example": "csp-06eb41e14121c550a"
                },
                "cspResourceName": {
                    "description": "CspResourceName is name assigned to the CSP resource. This name is internally used to handle the resource.",
                    "type": "string",
                    "example": "we12fawefadf1221edcf"
                },
                "id": {
                    "description": "Id is unique identifier for the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "location": {
                    "$ref": "#/definitions/model.Location"
                },
                "monAgentStatus": {
                    "description": "Montoring agent status",
                    "type": "string",
                    "example": "[installed, notInstalled, failed]"
                },
                "name": {
                    "description": "Name is human-readable string to represent the object",
                    "type": "string",
                    "example": "aws-ap-southeast-1"
                },
                "nativeStatus": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "sshPort": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "systemMessage": {
                    "description": "Latest system message such as error message",
                    "type": "string",
                    "example": "Failed because ..."
                },
                "targetAction": {
                    "type": "string"
                },
                "targetStatus": {
                    "type": "string"
                },
                "uid": {
                    "description": "Uid is universally unique identifier for the object, used for labelSelector",
                    "type": "string",
                    "example": "wef12awefadf1221edcf"
                }
            }
        },
        "recommendation.CspRegionPair": {
            "type": "object",
            "properties": {
                "csp": {
                    "type": "string",
                    "example": "aws"
                },
                "region": {
                    "type": "string",
                    "example": "ap-northeast-2"
                }
            }
        },
        "recommendation.RecommendedSecurityGroup": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetSecurityGroup": {
                    "$ref": "#/definitions/model.TbSecurityGroupReq"
                }
            }
        },
        "recommendation.RecommendedVNet": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetVNet": {
                    "$ref": "#/definitions/model.TbVNetReq"
                }
            }
        },
        "recommendation.RecommendedVmOsImage": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "sourceServer": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetVmOsImage": {
                    "$ref": "#/definitions/model.TbImageInfo"
                }
            }
        },
        "recommendation.RecommendedVmSpec": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "sourceServer": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targetVmSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbSpecInfo"
                    }
                }
            }
        },
        "resource.RestGetAllSecurityGroupResponse": {
            "type": "object",
            "properties": {
                "securityGroup": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbSecurityGroupInfo"
                    }
                }
            }
        },
        "resource.RestGetAllSshKeyResponse": {
            "type": "object",
            "properties": {
                "sshKey": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbSshKeyInfo"
                    }
                }
            }
        },
        "resource.RestGetAllVNetResponse": {
            "type": "object",
            "properties": {
                "vNet": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbVNetInfo"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "▶▶▶ CB-Tumblebug REST API (access via Beetle's reverse proxy)",
        "url": "http://localhost:8056/tumblebug/api/index.html"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "latest",
	Host:             "localhost:8056",
	BasePath:         "/beetle",
	Schemes:          []string{},
	Title:            "CM-Beetle REST API",
	Description:      "CM-Beetle REST API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
