basePath: /beetle
definitions:
  cloudmodel.CloudProperty:
    properties:
      csp:
        example: aws
        type: string
      region:
        example: ap-northeast-2
        type: string
    type: object
  cloudmodel.CommandExecutionStatus:
    enum:
    - Queued
    - Handling
    - Completed
    - Failed
    - Timeout
    type: string
    x-enum-varnames:
    - CommandStatusQueued
    - CommandStatusHandling
    - CommandStatusCompleted
    - CommandStatusFailed
    - CommandStatusTimeout
  cloudmodel.CommandStatusInfo:
    properties:
      commandExecuted:
        description: CommandExecuted is the actual SSH command executed on the VM
          (may be adjusted)
        example: ls -la
        type: string
      commandRequested:
        description: CommandRequested is the original command as requested by the
          user
        example: ls -la
        type: string
      completedTime:
        description: CompletedTime is when the command execution completed (success
          or failure)
        example: "2024-01-15 10:30:05"
        type: string
      elapsedTime:
        description: ElapsedTime is the duration of command execution in milliseconds
        example: 5000
        type: integer
      errorMessage:
        description: ErrorMessage contains error details if the execution failed
        example: SSH connection failed
        type: string
      index:
        description: Index is sequential identifier for this command execution (1,
          2, 3, ...)
        example: 1
        type: integer
      resultSummary:
        description: ResultSummary provides a brief summary of the execution result
        example: Command executed successfully
        type: string
      startedTime:
        description: StartedTime is when the command execution started
        example: "2024-01-15 10:30:00"
        type: string
      status:
        allOf:
        - $ref: '#/definitions/cloudmodel.CommandExecutionStatus'
        description: Status represents the current status of the command execution
        example: Completed
      stderr:
        description: Stderr contains the standard error from command execution (truncated
          for history)
        example: ""
        type: string
      stdout:
        description: Stdout contains the standard output from command execution (truncated
          for history)
        example: |-
          total 8
          drwxr-xr-x 2 user user 4096 Jan 15 10:30 .
        type: string
      xRequestId:
        description: XRequestId is the request ID from X-Request-ID header when the
          command was executed
        example: req-12345678-abcd-1234-efgh-123456789012
        type: string
    type: object
  cloudmodel.ConnConfig:
    properties:
      configName:
        type: string
      credentialHolder:
        type: string
      credentialName:
        type: string
      driverName:
        type: string
      providerName:
        type: string
      regionDetail:
        $ref: '#/definitions/cloudmodel.RegionDetail'
      regionRepresentative:
        type: boolean
      regionZoneInfo:
        $ref: '#/definitions/cloudmodel.RegionZoneInfo'
      regionZoneInfoName:
        type: string
      verified:
        type: boolean
    type: object
  cloudmodel.CreateSubGroupDynamicReq:
    properties:
      connectionName:
        description: |-
          if ConnectionName is given, the VM tries to use associtated credential.
          if not, it will use predefined ConnectionName in Spec objects
        example: aws-ap-northeast-2
        type: string
      description:
        example: Created via CB-Tumblebug
        type: string
      imageId:
        description: ImageId is field for id of a image in common namespace
        example: ami-01f71f215b23ba262
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        example:
          '"env"': '"test"}'
          '{"role"': '"worker"'
        type: object
      name:
        description: SubGroup name, actual VM name will be generated with -N postfix.
        example: g1
        type: string
      rootDiskSize:
        default: default
        description: '"default", Integer (GB): ["50", ..., "1000"]'
        example: "50"
        type: string
      rootDiskType:
        default: default
        description: '"", "default", "TYPE1", AWS: ["standard", "gp2", "gp3"], Azure:
          ["PremiumSSD", "StandardSSD", "StandardHDD"], GCP: ["pd-standard", "pd-balanced",
          "pd-ssd", "pd-extreme"], ALIBABA: ["cloud_efficiency", "cloud", "cloud_essd"],
          TENCENT: ["CLOUD_PREMIUM", "CLOUD_SSD"]'
        example: gp3
        type: string
      specId:
        description: SpecId is field for id of a spec in common namespace
        example: aws+ap-northeast-2+t3.nano
        type: string
      subGroupSize:
        default: "1"
        description: if subGroupSize is (not empty) && (> 0), subGroup will be generated.
          VMs will be created accordingly.
        example: "3"
        type: string
      vmUserPassword:
        example: ""
        type: string
    required:
    - imageId
    - specId
    type: object
  cloudmodel.CreateSubGroupReq:
    properties:
      connectionName:
        example: testcloud01-seoul
        type: string
      cspResourceId:
        description: CspResourceId is resource identifier managed by CSP (required
          for option=register)
        example: i-014fa6ede6ada0b2c
        type: string
      dataDiskIds:
        items:
          type: string
        type: array
      description:
        example: Description
        type: string
      imageId:
        description: ImageType        string   `json:"imageType"`
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        type: object
      name:
        description: SubGroup name of VMs. Actual VM name will be generated with -N
          postfix.
        example: g1-1
        type: string
      rootDiskSize:
        description: '"default", Integer (GB): ["50", ..., "1000"]'
        example: default, 30, 42, ...
        type: string
      rootDiskType:
        description: '"", "default", "TYPE1", AWS: ["standard", "gp2", "gp3"], Azure:
          ["PremiumSSD", "StandardSSD", "StandardHDD"], GCP: ["pd-standard", "pd-balanced",
          "pd-ssd", "pd-extreme"], ALIBABA: ["cloud_efficiency", "cloud", "cloud_ssd"],
          TENCENT: ["CLOUD_PREMIUM", "CLOUD_SSD"]'
        example: default, TYPE1, ...
        type: string
      securityGroupIds:
        items:
          type: string
        type: array
      specId:
        type: string
      sshKeyId:
        type: string
      subGroupSize:
        description: if subGroupSize is (not empty) && (> 0), subGroup will be generated.
          VMs will be created accordingly.
        example: "3"
        type: string
      subnetId:
        type: string
      vNetId:
        type: string
      vmUserName:
        type: string
      vmUserPassword:
        type: string
    required:
    - connectionName
    - imageId
    - name
    - securityGroupIds
    - specId
    - sshKeyId
    - subnetId
    - vNetId
    type: object
  cloudmodel.FirewallRuleReq:
    properties:
      CIDR:
        description: CIDR is the allowed IP range (e.g. 0.0.0.0/0, 10.0.0/8)
        example: 0.0.0.0/0
        type: string
      Direction:
        description: Direction is the direction of the rule (inbound or outbound)
        enum:
        - inbound
        - outbound
        example: inbound
        type: string
      Ports:
        description: |-
          Ports is to get multiple ports or port ranges as a string (e.g. "22,900-1000,2000-3000")
          This allows flexibility in specifying single ports or ranges in a comma-separated format.
          This field is used to handle both single ports and port ranges in a unified way.
          It can accept a single port (e.g. "22"), a range (e.g. "900-1000"), or multiple ports/ranges (e.g. "22,900-1000,2000-3000").
        example: 22,900-1000,2000-3000
        type: string
      Protocol:
        description: Protocol is the protocol type for the rule (TCP, UDP, ICMP).
          Don't use ALL here.
        enum:
        - TCP
        - UDP
        - ICMP
        example: TCP
        type: string
    required:
    - Direction
    - Protocol
    type: object
  cloudmodel.IdList:
    properties:
      idList:
        items:
          type: string
        type: array
    type: object
  cloudmodel.ImageInfo:
    properties:
      connectionName:
        type: string
      creationDate:
        type: string
      cspImageName:
        example: csp-06eb41e14121c550a
        type: string
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/cloudmodel.KeyValue'
        type: array
      fetchedTime:
        type: string
      id:
        example: aws-ap-southeast-1
        type: string
      imageStatus:
        allOf:
        - $ref: '#/definitions/cloudmodel.ImageStatus'
        description: Available, Deprecated, NA
        example: Available
      infraType:
        description: vm|k8s|kubernetes|container, etc.
        type: string
      isBasicImage:
        default: false
        type: boolean
      isGPUImage:
        default: false
        type: boolean
      isKubernetesImage:
        default: false
        type: boolean
      name:
        example: aws-ap-southeast-1
        type: string
      namespace:
        description: Composite primary key
        example: default
        type: string
      osArchitecture:
        allOf:
        - $ref: '#/definitions/cloudmodel.OSArchitecture'
        description: arm64, x86_64 etc.
        example: x86_64
      osDiskSizeGB:
        description: 10, 50, 100 etc.
        example: 50
        type: number
      osDiskType:
        description: ebs, HDD, etc.
        example: HDD
        type: string
      osDistribution:
        description: Ubuntu 22.04~, CentOS 8 etc.
        example: Ubuntu 22.04~
        type: string
      osPlatform:
        allOf:
        - $ref: '#/definitions/cloudmodel.OSPlatform'
        description: Linux/UNIX, Windows, NA
        example: Linux/UNIX
      osType:
        example: ubuntu 22.04
        type: string
      providerName:
        type: string
      regionList:
        description: Array field for supporting multiple regions
        items:
          type: string
        type: array
      systemLabel:
        example: Managed by CB-Tumblebug
        type: string
      uid:
        example: wef12awefadf1221edcf
        type: string
    type: object
  cloudmodel.ImageStatus:
    enum:
    - Available
    - Unavailable
    - Deprecated
    - NA
    type: string
    x-enum-varnames:
    - ImageAvailable
    - ImageUnavailable
    - ImageDeprecated
    - ImageNA
  cloudmodel.KeyValue:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  cloudmodel.Location:
    properties:
      display:
        type: string
      latitude:
        type: number
      longitude:
        type: number
    type: object
  cloudmodel.MciCmdReq:
    properties:
      command:
        example:
        - 'client_ip=$(echo $SSH_CLIENT | awk ''{print $1}''); echo SSH client IP
          is: $client_ip'
        items:
          type: string
        type: array
      userName:
        example: cb-user
        type: string
    required:
    - command
    type: object
  cloudmodel.MciCreationErrors:
    properties:
      failedVmCount:
        description: FailedVmCount is the number of VMs that failed to be created
        type: integer
      failureHandlingStrategy:
        description: FailureHandlingStrategy indicates how failures were handled
        type: string
      successfulVmCount:
        description: SuccessfulVmCount is the number of VMs that were successfully
          created
        type: integer
      totalVmCount:
        description: TotalVmCount is the total number of VMs that were supposed to
          be created
        type: integer
      vmCreationErrors:
        description: VmCreationErrors contains errors from actual VM creation phase
        items:
          $ref: '#/definitions/cloudmodel.VmCreationError'
        type: array
      vmObjectCreationErrors:
        description: VmObjectCreationErrors contains errors from VM object creation
          phase
        items:
          $ref: '#/definitions/cloudmodel.VmCreationError'
        type: array
    type: object
  cloudmodel.MciDynamicReq:
    properties:
      description:
        example: Made in CB-TB
        type: string
      installMonAgent:
        default: "no"
        description: InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no]
          default:no)
        enum:
        - "yes"
        - "no"
        example: "no"
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        type: object
      name:
        example: mci01
        type: string
      policyOnPartialFailure:
        default: continue
        description: |-
          PolicyOnPartialFailure determines how to handle VM creation failures
          - "continue": Continue with partial MCI creation (default)
          - "rollback": Cleanup entire MCI when any VM fails
          - "refine": Mark failed VMs for refinement
        enum:
        - continue
        - rollback
        - refine
        example: continue
        type: string
      postCommand:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciCmdReq'
        description: PostCommand is for the command to bootstrap the VMs
      subGroups:
        description: |-
          SubGroups is array of VM requests for multi-cloud infrastructure
          Example: Multiple VM groups across different CSPs
          [
            {
              "name": "aws-group",
              "subGroupSize": "3",
              "specId": "aws+ap-northeast-2+t3.nano",
              "imageId": "ami-01f71f215b23ba262",
              "rootDiskSize": "50",
              "label": {"role": "worker", "csp": "aws"}
            },
            {
              "name": "azure-group",
              "subGroupSize": "2",
              "specId": "azure+koreasouth+standard_b1s",
              "imageId": "Canonical:0001-com-ubuntu-server-jammy:22_04-lts:22.04.202505210",
              "rootDiskSize": "50",
              "label": {"role": "head", "csp": "azure"}
            },
            {
              "name": "gcp-group",
              "subGroupSize": "1",
              "specId": "gcp+asia-northeast3+g1-small",
              "imageId": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2204-jammy-v20250712",
              "rootDiskSize": "50",
              "label": {"role": "test", "csp": "gcp"}
            }
          ]
        items:
          $ref: '#/definitions/cloudmodel.CreateSubGroupDynamicReq'
        type: array
      systemLabel:
        description: SystemLabel is for describing the mci in a keyword (any string
          can be used) for special System purpose
        example: ""
        type: string
    required:
    - name
    - subGroups
    type: object
  cloudmodel.MciInfo:
    properties:
      configureCloudAdaptiveNetwork:
        default: "no"
        description: ConfigureCloudAdaptiveNetwork is an option to configure Cloud
          Adaptive Network (CLADNet) ([yes/no] default:yes)
        enum:
        - "yes"
        - "no"
        example: "yes"
        type: string
      creationErrors:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciCreationErrors'
        description: CreationErrors contains information about VM creation failures
          (if any)
      description:
        type: string
      id:
        description: Id is unique identifier for the object
        example: aws-ap-southeast-1
        type: string
      installMonAgent:
        default: "no"
        description: InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no]
          default:no)
        enum:
        - "yes"
        - "no"
        example: "no"
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        type: object
      name:
        description: Name is human-readable string to represent the object
        example: aws-ap-southeast-1
        type: string
      newVmList:
        description: List of IDs for new VMs. Return IDs if the VMs are newly added.
          This field should be used for return body only.
        items:
          type: string
        type: array
      placementAlgo:
        type: string
      postCommand:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciCmdReq'
        description: PostCommand is for the command to bootstrap the VMs
      postCommandResult:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciSshCmdResult'
        description: PostCommandResult is the result of the command for bootstraping
          the VMs
      resourceType:
        description: ResourceType is the type of the resource
        type: string
      status:
        type: string
      statusCount:
        $ref: '#/definitions/cloudmodel.StatusCountInfo'
      systemLabel:
        description: SystemLabel is for describing the mci in a keyword (any string
          can be used) for special System purpose
        example: Managed by CB-Tumblebug
        type: string
      systemMessage:
        description: Latest system message such as error message
        items:
          type: string
        type: array
      targetAction:
        type: string
      targetStatus:
        type: string
      uid:
        description: Uid is universally unique identifier for the object, used for
          labelSelector
        example: wef12awefadf1221edcf
        type: string
      vm:
        items:
          $ref: '#/definitions/cloudmodel.VmInfo'
        type: array
    type: object
  cloudmodel.MciInfoList:
    properties:
      mci:
        items:
          $ref: '#/definitions/cloudmodel.MciInfo'
        type: array
    type: object
  cloudmodel.MciReq:
    properties:
      description:
        example: Made in CB-TB
        type: string
      installMonAgent:
        default: "no"
        description: InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no]
          default:yes)
        enum:
        - "yes"
        - "no"
        example: "no"
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        type: object
      name:
        example: mci01
        type: string
      placementAlgo:
        type: string
      policyOnPartialFailure:
        default: continue
        description: |-
          PolicyOnPartialFailure determines how to handle VM creation failures
          - "continue": Continue with partial MCI creation (default)
          - "rollback": Cleanup entire MCI when any VM fails
          - "refine": Mark failed VMs for refinement
        enum:
        - continue
        - rollback
        - refine
        example: continue
        type: string
      postCommand:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciCmdReq'
        description: PostCommand is for the command to bootstrap the VMs
      subGroups:
        items:
          $ref: '#/definitions/cloudmodel.CreateSubGroupReq'
        type: array
      systemLabel:
        description: SystemLabel is for describing the mci in a keyword (any string
          can be used) for special System purpose
        example: ""
        type: string
    required:
    - name
    - subGroups
    type: object
  cloudmodel.MciSshCmdResult:
    properties:
      results:
        items:
          $ref: '#/definitions/cloudmodel.SshCmdResult'
        type: array
    type: object
  cloudmodel.OSArchitecture:
    enum:
    - arm32
    - arm64
    - arm64_mac
    - x86_32
    - x86_64
    - x86_32_mac
    - x86_64_mac
    - s390x
    - NA
    - ""
    type: string
    x-enum-varnames:
    - ARM32
    - ARM64
    - ARM64_MAC
    - X86_32
    - X86_64
    - X86_32_MAC
    - X86_64_MAC
    - S390X
    - ArchitectureNA
    - ArchitectureUnknown
  cloudmodel.OSPlatform:
    enum:
    - Linux/UNIX
    - Windows
    - NA
    type: string
    x-enum-varnames:
    - Linux_UNIX
    - Windows
    - PlatformNA
  cloudmodel.RecommendedSecurityGroup:
    properties:
      description:
        type: string
      sourceServers:
        items:
          type: string
        type: array
      status:
        type: string
      targetSecurityGroup:
        $ref: '#/definitions/cloudmodel.SecurityGroupReq'
    type: object
  cloudmodel.RecommendedVNet:
    properties:
      description:
        type: string
      status:
        type: string
      targetVNet:
        $ref: '#/definitions/cloudmodel.VNetReq'
    type: object
  cloudmodel.RecommendedVmInfraDynamic:
    properties:
      description:
        type: string
      status:
        type: string
      targetVmInfra:
        $ref: '#/definitions/cloudmodel.MciDynamicReq'
    type: object
  cloudmodel.RecommendedVmOsImage:
    properties:
      description:
        type: string
      sourceServers:
        items:
          type: string
        type: array
      status:
        type: string
      targetVmOsImage:
        $ref: '#/definitions/cloudmodel.ImageInfo'
    type: object
  cloudmodel.RecommendedVmSpec:
    properties:
      description:
        type: string
      sourceServers:
        items:
          type: string
        type: array
      status:
        type: string
      targetVmSpec:
        $ref: '#/definitions/cloudmodel.SpecInfo'
    type: object
  cloudmodel.RegionDetail:
    properties:
      description:
        type: string
      location:
        $ref: '#/definitions/cloudmodel.Location'
      regionId:
        type: string
      regionName:
        type: string
      zones:
        items:
          type: string
        type: array
    type: object
  cloudmodel.RegionInfo:
    properties:
      region:
        type: string
      zone:
        type: string
    type: object
  cloudmodel.RegionZoneInfo:
    properties:
      assignedRegion:
        type: string
      assignedZone:
        type: string
    type: object
  cloudmodel.SecurityGroupReq:
    properties:
      connectionName:
        type: string
      cspResourceId:
        description: CspResourceId is required to register object from CSP (option=register)
        example: 'required for option=register only. ex: csp-06eb41e14121c550a'
        type: string
      description:
        type: string
      firewallRules:
        description: validate:"required"`
        items:
          $ref: '#/definitions/cloudmodel.FirewallRuleReq'
        type: array
      name:
        type: string
      vNetId:
        type: string
    required:
    - connectionName
    - name
    - vNetId
    type: object
  cloudmodel.SpecInfo:
    properties:
      acceleratorCount:
        type: integer
      acceleratorMemoryGB:
        type: number
      acceleratorModel:
        type: string
      acceleratorType:
        type: string
      architecture:
        example: x86_64
        type: string
      associatedObjectList:
        items:
          type: string
        type: array
      connectionName:
        type: string
      costPerHour:
        type: number
      cspSpecName:
        description: CspSpecName is name of the spec given by CSP
        example: csp-06eb41e14121c550a
        type: string
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/cloudmodel.KeyValue'
        type: array
      diskSizeGB:
        type: number
      evaluationScore01:
        type: number
      evaluationScore02:
        type: number
      evaluationScore03:
        type: number
      evaluationScore04:
        type: number
      evaluationScore05:
        type: number
      evaluationScore06:
        type: number
      evaluationScore07:
        type: number
      evaluationScore08:
        type: number
      evaluationScore09:
        type: number
      evaluationScore10:
        type: number
      evaluationStatus:
        type: string
      id:
        description: Id is unique identifier for the object
        example: aws+ap-southeast+csp-06eb41e14121c550a
        type: string
      infraType:
        description: InfraType can be one of vm|k8s|kubernetes|container, etc.
        type: string
      isAutoGenerated:
        type: boolean
      maxTotalStorageTiB:
        type: integer
      memoryGiB:
        type: number
      name:
        description: Name is human-readable string to represent the object
        example: aws-ap-southeast-1
        type: string
      namespace:
        example: default
        type: string
      netBwGbps:
        type: integer
      orderInFilteredResult:
        type: integer
      osType:
        type: string
      providerName:
        type: string
      regionLatitude:
        type: number
      regionLongitude:
        type: number
      regionName:
        type: string
      rootDiskSize:
        type: string
      rootDiskType:
        type: string
      systemLabel:
        description: SystemLabel is for describing the Resource in a keyword (any
          string can be used) for special System purpose
        example: Managed by CB-Tumblebug
        type: string
      uid:
        description: Uid is universally unique identifier for the object, used for
          labelSelector
        example: wef12awefadf1221edcf
        type: string
      vCPU:
        type: integer
    type: object
  cloudmodel.SshCmdResult:
    properties:
      command:
        additionalProperties:
          type: string
        type: object
      err: {}
      mciId:
        type: string
      stderr:
        additionalProperties:
          type: string
        type: object
      stdout:
        additionalProperties:
          type: string
        type: object
      vmId:
        type: string
      vmIp:
        type: string
    type: object
  cloudmodel.SshKeyReq:
    properties:
      connectionName:
        type: string
      cspResourceId:
        description: |-
          Fields for "Register existing SSH keys" feature
          CspResourceId is required to register object from CSP (option=register)
        type: string
      description:
        type: string
      fingerprint:
        type: string
      name:
        type: string
      privateKey:
        type: string
      publicKey:
        type: string
      username:
        type: string
      verifiedUsername:
        type: string
    required:
    - connectionName
    - name
    type: object
  cloudmodel.StatusCountInfo:
    properties:
      countCreating:
        description: CountCreating is for counting Creating
        type: integer
      countFailed:
        description: CountFailed is for counting Failed
        type: integer
      countRebooting:
        description: CountRebooting is for counting Rebooting
        type: integer
      countResuming:
        description: CountResuming is for counting Resuming
        type: integer
      countRunning:
        description: CountRunning is for counting Running
        type: integer
      countSuspended:
        description: CountSuspended is for counting Suspended
        type: integer
      countSuspending:
        description: CountSuspending is for counting Suspending
        type: integer
      countTerminated:
        description: CountTerminated is for counting Terminated
        type: integer
      countTerminating:
        description: CountTerminating is for counting Terminating
        type: integer
      countTotal:
        description: CountTotal is for Total VMs
        type: integer
      countUndefined:
        description: CountUndefined is for counting Undefined
        type: integer
    type: object
  cloudmodel.SubnetReq:
    properties:
      description:
        example: subnet00 managed by CB-Tumblebug
        type: string
      ipv4_CIDR:
        example: 10.0.1.0/24
        type: string
      name:
        example: subnet00
        type: string
      zone:
        type: string
    required:
    - ipv4_CIDR
    - name
    type: object
  cloudmodel.VNetReq:
    properties:
      cidrBlock:
        example: 10.0.0.0/16
        type: string
      connectionName:
        example: aws-ap-northeast-2
        type: string
      description:
        example: vnet00 managed by CB-Tumblebug
        type: string
      name:
        example: vnet00
        type: string
      subnetInfoList:
        items:
          $ref: '#/definitions/cloudmodel.SubnetReq'
        type: array
    required:
    - connectionName
    - name
    type: object
  cloudmodel.VmCreationError:
    properties:
      error:
        description: Error is the error message
        type: string
      phase:
        description: Phase indicates when the error occurred
        type: string
      timestamp:
        description: Timestamp when the error occurred
        type: string
      vmName:
        description: VmName is the name of the VM that failed
        type: string
    type: object
  cloudmodel.VmInfo:
    properties:
      addtionalDetails:
        items:
          $ref: '#/definitions/cloudmodel.KeyValue'
        type: array
      commandStatus:
        description: CommandStatus stores the status and history of remote commands
          executed on this VM
        items:
          $ref: '#/definitions/cloudmodel.CommandStatusInfo'
        type: array
      connectionConfig:
        $ref: '#/definitions/cloudmodel.ConnConfig'
      connectionName:
        type: string
      createdTime:
        description: Created time
        example: "2022-11-10 23:00:00"
        type: string
      cspImageName:
        type: string
      cspResourceId:
        description: CspResourceId is resource identifier managed by CSP
        example: csp-06eb41e14121c550a
        type: string
      cspResourceName:
        description: CspResourceName is name assigned to the CSP resource. This name
          is internally used to handle the resource.
        example: we12fawefadf1221edcf
        type: string
      cspSpecName:
        type: string
      cspSshKeyId:
        type: string
      cspSubnetId:
        type: string
      cspVNetId:
        type: string
      dataDiskIds:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        description: Id is unique identifier for the object
        example: aws-ap-southeast-1
        type: string
      imageId:
        type: string
      label:
        additionalProperties:
          type: string
        type: object
      location:
        $ref: '#/definitions/cloudmodel.Location'
      monAgentStatus:
        description: Montoring agent status
        example: '[installed, notInstalled, failed]'
        type: string
      name:
        description: Name is human-readable string to represent the object
        example: aws-ap-southeast-1
        type: string
      networkAgentStatus:
        description: NetworkAgent status
        example: '[notInstalled, installing, installed, failed]'
        type: string
      networkInterface:
        type: string
      privateDNS:
        type: string
      privateIP:
        type: string
      publicDNS:
        type: string
      publicIP:
        type: string
      region:
        allOf:
        - $ref: '#/definitions/cloudmodel.RegionInfo'
        description: AWS, ex) {us-east1, us-east1-c} or {ap-northeast-2}
      resourceType:
        description: ResourceType is the type of the resource
        type: string
      rootDiskName:
        type: string
      rootDiskSize:
        type: string
      rootDiskType:
        type: string
      securityGroupIds:
        items:
          type: string
        type: array
      specId:
        type: string
      sshKeyId:
        type: string
      sshPort:
        type: string
      status:
        description: Required by CB-Tumblebug
        type: string
      subGroupId:
        description: defined if the VM is in a group
        type: string
      subnetId:
        type: string
      systemMessage:
        description: Latest system message such as error message
        example: Failed because ...
        type: string
      targetAction:
        type: string
      targetStatus:
        type: string
      uid:
        description: Uid is universally unique identifier for the object, used for
          labelSelector
        example: wef12awefadf1221edcf
        type: string
      vNetId:
        type: string
      vmUserName:
        type: string
      vmUserPassword:
        type: string
    type: object
  common.SimpleMessage:
    properties:
      message:
        example: Any message
        type: string
    type: object
  common.SimpleMsg:
    properties:
      message:
        example: Any message
        type: string
    type: object
  controller.JSONResult:
    type: object
  controller.MigrateInfraRequest:
    properties:
      description:
        type: string
      status:
        type: string
      targetCloud:
        $ref: '#/definitions/cloudmodel.CloudProperty'
      targetSecurityGroupList:
        items:
          $ref: '#/definitions/cloudmodel.SecurityGroupReq'
        type: array
      targetSshKey:
        $ref: '#/definitions/cloudmodel.SshKeyReq'
      targetVNet:
        $ref: '#/definitions/cloudmodel.VNetReq'
      targetVmInfra:
        $ref: '#/definitions/cloudmodel.MciReq'
      targetVmOsImageList:
        items:
          $ref: '#/definitions/cloudmodel.ImageInfo'
        type: array
      targetVmSpecList:
        items:
          $ref: '#/definitions/cloudmodel.SpecInfo'
        type: array
    type: object
  controller.MigrateInfraResponse:
    properties:
      configureCloudAdaptiveNetwork:
        default: "no"
        description: ConfigureCloudAdaptiveNetwork is an option to configure Cloud
          Adaptive Network (CLADNet) ([yes/no] default:yes)
        enum:
        - "yes"
        - "no"
        example: "yes"
        type: string
      creationErrors:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciCreationErrors'
        description: CreationErrors contains information about VM creation failures
          (if any)
      description:
        type: string
      id:
        description: Id is unique identifier for the object
        example: aws-ap-southeast-1
        type: string
      installMonAgent:
        default: "no"
        description: InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no]
          default:no)
        enum:
        - "yes"
        - "no"
        example: "no"
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        type: object
      name:
        description: Name is human-readable string to represent the object
        example: aws-ap-southeast-1
        type: string
      newVmList:
        description: List of IDs for new VMs. Return IDs if the VMs are newly added.
          This field should be used for return body only.
        items:
          type: string
        type: array
      placementAlgo:
        type: string
      postCommand:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciCmdReq'
        description: PostCommand is for the command to bootstrap the VMs
      postCommandResult:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciSshCmdResult'
        description: PostCommandResult is the result of the command for bootstraping
          the VMs
      resourceType:
        description: ResourceType is the type of the resource
        type: string
      status:
        type: string
      statusCount:
        $ref: '#/definitions/cloudmodel.StatusCountInfo'
      systemLabel:
        description: SystemLabel is for describing the mci in a keyword (any string
          can be used) for special System purpose
        example: Managed by CB-Tumblebug
        type: string
      systemMessage:
        description: Latest system message such as error message
        items:
          type: string
        type: array
      targetAction:
        type: string
      targetStatus:
        type: string
      uid:
        description: Uid is universally unique identifier for the object, used for
          labelSelector
        example: wef12awefadf1221edcf
        type: string
      vm:
        items:
          $ref: '#/definitions/cloudmodel.VmInfo'
        type: array
    type: object
  controller.MigrateInfraWithDefaultsRequest:
    properties:
      description:
        example: Made in CB-TB
        type: string
      installMonAgent:
        default: "no"
        description: InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no]
          default:no)
        enum:
        - "yes"
        - "no"
        example: "no"
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        type: object
      name:
        example: mci01
        type: string
      policyOnPartialFailure:
        default: continue
        description: |-
          PolicyOnPartialFailure determines how to handle VM creation failures
          - "continue": Continue with partial MCI creation (default)
          - "rollback": Cleanup entire MCI when any VM fails
          - "refine": Mark failed VMs for refinement
        enum:
        - continue
        - rollback
        - refine
        example: continue
        type: string
      postCommand:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciCmdReq'
        description: PostCommand is for the command to bootstrap the VMs
      subGroups:
        description: |-
          SubGroups is array of VM requests for multi-cloud infrastructure
          Example: Multiple VM groups across different CSPs
          [
            {
              "name": "aws-group",
              "subGroupSize": "3",
              "specId": "aws+ap-northeast-2+t3.nano",
              "imageId": "ami-01f71f215b23ba262",
              "rootDiskSize": "50",
              "label": {"role": "worker", "csp": "aws"}
            },
            {
              "name": "azure-group",
              "subGroupSize": "2",
              "specId": "azure+koreasouth+standard_b1s",
              "imageId": "Canonical:0001-com-ubuntu-server-jammy:22_04-lts:22.04.202505210",
              "rootDiskSize": "50",
              "label": {"role": "head", "csp": "azure"}
            },
            {
              "name": "gcp-group",
              "subGroupSize": "1",
              "specId": "gcp+asia-northeast3+g1-small",
              "imageId": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2204-jammy-v20250712",
              "rootDiskSize": "50",
              "label": {"role": "test", "csp": "gcp"}
            }
          ]
        items:
          $ref: '#/definitions/cloudmodel.CreateSubGroupDynamicReq'
        type: array
      systemLabel:
        description: SystemLabel is for describing the mci in a keyword (any string
          can be used) for special System purpose
        example: ""
        type: string
    required:
    - name
    - subGroups
    type: object
  controller.MigrateInfraWithDefaultsResponse:
    properties:
      configureCloudAdaptiveNetwork:
        default: "no"
        description: ConfigureCloudAdaptiveNetwork is an option to configure Cloud
          Adaptive Network (CLADNet) ([yes/no] default:yes)
        enum:
        - "yes"
        - "no"
        example: "yes"
        type: string
      creationErrors:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciCreationErrors'
        description: CreationErrors contains information about VM creation failures
          (if any)
      description:
        type: string
      id:
        description: Id is unique identifier for the object
        example: aws-ap-southeast-1
        type: string
      installMonAgent:
        default: "no"
        description: InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no]
          default:no)
        enum:
        - "yes"
        - "no"
        example: "no"
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        type: object
      name:
        description: Name is human-readable string to represent the object
        example: aws-ap-southeast-1
        type: string
      newVmList:
        description: List of IDs for new VMs. Return IDs if the VMs are newly added.
          This field should be used for return body only.
        items:
          type: string
        type: array
      placementAlgo:
        type: string
      postCommand:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciCmdReq'
        description: PostCommand is for the command to bootstrap the VMs
      postCommandResult:
        allOf:
        - $ref: '#/definitions/cloudmodel.MciSshCmdResult'
        description: PostCommandResult is the result of the command for bootstraping
          the VMs
      resourceType:
        description: ResourceType is the type of the resource
        type: string
      status:
        type: string
      statusCount:
        $ref: '#/definitions/cloudmodel.StatusCountInfo'
      systemLabel:
        description: SystemLabel is for describing the mci in a keyword (any string
          can be used) for special System purpose
        example: Managed by CB-Tumblebug
        type: string
      systemMessage:
        description: Latest system message such as error message
        items:
          type: string
        type: array
      targetAction:
        type: string
      targetStatus:
        type: string
      uid:
        description: Uid is universally unique identifier for the object, used for
          labelSelector
        example: wef12awefadf1221edcf
        type: string
      vm:
        items:
          $ref: '#/definitions/cloudmodel.VmInfo'
        type: array
    type: object
  controller.RecommendInfraRequest:
    properties:
      desiredProvider:
        example: aws
        type: string
      desiredRegion:
        example: ap-northeast-2
        type: string
      onpremiseInfraModel:
        $ref: '#/definitions/onpremisemodel.OnpremInfra'
    required:
    - onpremiseInfraModel
    type: object
  controller.RecommendInfraResponse:
    properties:
      description:
        type: string
      status:
        type: string
      targetInfra:
        $ref: '#/definitions/model.MciDynamicReq'
    type: object
  controller.RecommendSecurityGroupResponse:
    properties:
      count:
        type: integer
      description:
        type: string
      status:
        type: string
      targetSecurityGroupList:
        items:
          $ref: '#/definitions/cloudmodel.RecommendedSecurityGroup'
        type: array
    type: object
  controller.RecommendVNetResponse:
    properties:
      count:
        type: integer
      description:
        type: string
      targetVNetList:
        items:
          $ref: '#/definitions/cloudmodel.RecommendedVNet'
        type: array
    type: object
  controller.RecommendVmInfraRequest:
    properties:
      desiredCspAndRegionPair:
        $ref: '#/definitions/cloudmodel.CloudProperty'
      onpremiseInfraModel:
        $ref: '#/definitions/onpremisemodel.OnpremInfra'
    type: object
  controller.RecommendVmInfraResponse:
    properties:
      description:
        type: string
      status:
        type: string
      targetCloud:
        $ref: '#/definitions/cloudmodel.CloudProperty'
      targetSecurityGroupList:
        items:
          $ref: '#/definitions/cloudmodel.SecurityGroupReq'
        type: array
      targetSshKey:
        $ref: '#/definitions/cloudmodel.SshKeyReq'
      targetVNet:
        $ref: '#/definitions/cloudmodel.VNetReq'
      targetVmInfra:
        $ref: '#/definitions/cloudmodel.MciReq'
      targetVmOsImageList:
        items:
          $ref: '#/definitions/cloudmodel.ImageInfo'
        type: array
      targetVmSpecList:
        items:
          $ref: '#/definitions/cloudmodel.SpecInfo'
        type: array
    type: object
  controller.RecommendVmInfraWithDefaultsRequest:
    properties:
      desiredCspAndRegionPair:
        $ref: '#/definitions/cloudmodel.CloudProperty'
      onpremiseInfraModel:
        $ref: '#/definitions/onpremisemodel.OnpremInfra'
    type: object
  controller.RecommendVmInfraWithDefaultsResponse:
    properties:
      count:
        type: integer
      description:
        type: string
      targetVmInfraList:
        items:
          $ref: '#/definitions/cloudmodel.RecommendedVmInfraDynamic'
        type: array
    type: object
  controller.RecommendVmOsImageResponse:
    properties:
      count:
        type: integer
      description:
        type: string
      recommendedVmOsImageList:
        items:
          $ref: '#/definitions/cloudmodel.RecommendedVmOsImage'
        type: array
      status:
        type: string
    type: object
  controller.RecommendVmSpecResponse:
    properties:
      count:
        type: integer
      description:
        type: string
      recommendedVmSpecList:
        items:
          $ref: '#/definitions/cloudmodel.RecommendedVmSpec'
        type: array
      status:
        type: string
    type: object
  github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response:
    properties:
      details:
        example: Any details
        type: string
      list:
        items: {}
        type: array
      object:
        additionalProperties: true
        type: object
      success:
        example: true
        type: boolean
      text:
        example: Any text
        type: string
    type: object
  model.BastionNode:
    properties:
      mciId:
        type: string
      vmId:
        type: string
    type: object
  model.ConnConfig:
    properties:
      configName:
        type: string
      credentialHolder:
        type: string
      credentialName:
        type: string
      driverName:
        type: string
      providerName:
        type: string
      regionDetail:
        $ref: '#/definitions/model.RegionDetail'
      regionRepresentative:
        type: boolean
      regionZoneInfo:
        $ref: '#/definitions/model.RegionZoneInfo'
      regionZoneInfoName:
        type: string
      verified:
        type: boolean
    type: object
  model.CreateSubGroupDynamicReq:
    properties:
      connectionName:
        description: |-
          if ConnectionName is given, the VM tries to use associtated credential.
          if not, it will use predefined ConnectionName in Spec objects
        example: aws-ap-northeast-2
        type: string
      description:
        example: Created via CB-Tumblebug
        type: string
      imageId:
        description: ImageId is field for id of a image in common namespace
        example: ami-01f71f215b23ba262
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        example:
          '"env"': '"test"}'
          '{"role"': '"worker"'
        type: object
      name:
        description: SubGroup name, actual VM name will be generated with -N postfix.
        example: g1
        type: string
      rootDiskSize:
        default: default
        description: '"default", Integer (GB): ["50", ..., "1000"]'
        example: "50"
        type: string
      rootDiskType:
        default: default
        description: '"", "default", "TYPE1", AWS: ["standard", "gp2", "gp3"], Azure:
          ["PremiumSSD", "StandardSSD", "StandardHDD"], GCP: ["pd-standard", "pd-balanced",
          "pd-ssd", "pd-extreme"], ALIBABA: ["cloud_efficiency", "cloud", "cloud_essd"],
          TENCENT: ["CLOUD_PREMIUM", "CLOUD_SSD"]'
        example: gp3
        type: string
      specId:
        description: SpecId is field for id of a spec in common namespace
        example: aws+ap-northeast-2+t3.nano
        type: string
      subGroupSize:
        default: "1"
        description: if subGroupSize is (not empty) && (> 0), subGroup will be generated.
          VMs will be created accordingly.
        example: "3"
        type: string
      vmUserPassword:
        example: ""
        type: string
    required:
    - imageId
    - specId
    type: object
  model.FirewallRuleInfo:
    properties:
      CIDR:
        description: CIDR is the allowed IP range (e.g. 0.0.0.0/0, 10.0.0/8)
        example: 0.0.0.0/0
        type: string
      Direction:
        description: Direction is the direction of the rule (inbound or outbound)
        enum:
        - inbound
        - outbound
        example: inbound
        type: string
      Port:
        description: Port is the single port (e.g. "22") or port range (e.g. "1-65535")
          for the rule
        example: 1-65535
        type: string
      Protocol:
        description: Protocol is the protocol type for the rule (TCP, UDP, ICMP, ALL)
        enum:
        - TCP
        - UDP
        - ICMP
        - ALL
        example: TCP
        type: string
    required:
    - Direction
    - Protocol
    type: object
  model.FirewallRuleReq:
    properties:
      CIDR:
        description: CIDR is the allowed IP range (e.g. 0.0.0.0/0, 10.0.0/8)
        example: 0.0.0.0/0
        type: string
      Direction:
        description: Direction is the direction of the rule (inbound or outbound)
        enum:
        - inbound
        - outbound
        example: inbound
        type: string
      Ports:
        description: |-
          Ports is to get multiple ports or port ranges as a string (e.g. "22,900-1000,2000-3000")
          This allows flexibility in specifying single ports or ranges in a comma-separated format.
          This field is used to handle both single ports and port ranges in a unified way.
          It can accept a single port (e.g. "22"), a range (e.g. "900-1000"), or multiple ports/ranges (e.g. "22,900-1000,2000-3000").
        example: 22,900-1000,2000-3000
        type: string
      Protocol:
        description: Protocol is the protocol type for the rule (TCP, UDP, ICMP).
          Don't use ALL here.
        enum:
        - TCP
        - UDP
        - ICMP
        example: TCP
        type: string
    required:
    - Direction
    - Protocol
    type: object
  model.IdList:
    properties:
      output:
        items:
          type: string
        type: array
    type: object
  model.KeyValue:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  model.Location:
    properties:
      display:
        type: string
      latitude:
        type: number
      longitude:
        type: number
    type: object
  model.MciCmdReq:
    properties:
      command:
        example:
        - 'client_ip=$(echo $SSH_CLIENT | awk ''{print $1}''); echo SSH client IP
          is: $client_ip'
        items:
          type: string
        type: array
      userName:
        example: cb-user
        type: string
    required:
    - command
    type: object
  model.MciDynamicReq:
    properties:
      description:
        example: Made in CB-TB
        type: string
      installMonAgent:
        default: "no"
        description: InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no]
          default:no)
        enum:
        - "yes"
        - "no"
        example: "no"
        type: string
      label:
        additionalProperties:
          type: string
        description: Label is for describing the object by keywords
        type: object
      name:
        example: mci01
        type: string
      policyOnPartialFailure:
        default: continue
        description: |-
          PolicyOnPartialFailure determines how to handle VM creation failures
          - "continue": Continue with partial MCI creation (default)
          - "rollback": Cleanup entire MCI when any VM fails
          - "refine": Mark failed VMs for refinement
        enum:
        - continue
        - rollback
        - refine
        example: continue
        type: string
      postCommand:
        allOf:
        - $ref: '#/definitions/model.MciCmdReq'
        description: PostCommand is for the command to bootstrap the VMs
      subGroups:
        description: |-
          SubGroups is array of VM requests for multi-cloud infrastructure
          Example: Multiple VM groups across different CSPs
          [
            {
              "name": "aws-group",
              "subGroupSize": "3",
              "specId": "aws+ap-northeast-2+t3.nano",
              "imageId": "ami-01f71f215b23ba262",
              "rootDiskSize": "50",
              "label": {"role": "worker", "csp": "aws"}
            },
            {
              "name": "azure-group",
              "subGroupSize": "2",
              "specId": "azure+koreasouth+standard_b1s",
              "imageId": "Canonical:0001-com-ubuntu-server-jammy:22_04-lts:22.04.202505210",
              "rootDiskSize": "50",
              "label": {"role": "head", "csp": "azure"}
            },
            {
              "name": "gcp-group",
              "subGroupSize": "1",
              "specId": "gcp+asia-northeast3+g1-small",
              "imageId": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2204-jammy-v20250712",
              "rootDiskSize": "50",
              "label": {"role": "test", "csp": "gcp"}
            }
          ]
        items:
          $ref: '#/definitions/model.CreateSubGroupDynamicReq'
        type: array
      systemLabel:
        description: SystemLabel is for describing the mci in a keyword (any string
          can be used) for special System purpose
        example: ""
        type: string
    required:
    - name
    - subGroups
    type: object
  model.RegionDetail:
    properties:
      description:
        type: string
      location:
        $ref: '#/definitions/model.Location'
      regionId:
        type: string
      regionName:
        type: string
      zones:
        items:
          type: string
        type: array
    type: object
  model.RegionZoneInfo:
    properties:
      assignedRegion:
        type: string
      assignedZone:
        type: string
    type: object
  model.SecurityGroupInfo:
    properties:
      associatedObjectList:
        items:
          type: string
        type: array
      connectionConfig:
        $ref: '#/definitions/model.ConnConfig'
      connectionName:
        type: string
      cspResourceId:
        description: CspResourceId is resource identifier managed by CSP
        example: csp-06eb41e14121c550a
        type: string
      cspResourceName:
        description: CspResourceName is name assigned to the CSP resource. This name
          is internally used to handle the resource.
        example: we12fawefadf1221edcf
        type: string
      description:
        type: string
      firewallRules:
        items:
          $ref: '#/definitions/model.FirewallRuleInfo'
        type: array
      id:
        description: Id is unique identifier for the object
        example: aws-ap-southeast-1
        type: string
      isAutoGenerated:
        type: boolean
      keyValueList:
        items:
          $ref: '#/definitions/model.KeyValue'
        type: array
      name:
        description: Name is human-readable string to represent the object
        example: aws-ap-southeast-1
        type: string
      resourceType:
        description: ResourceType is the type of the resource
        type: string
      systemLabel:
        description: SystemLabel is for describing the Resource in a keyword (any
          string can be used) for special System purpose
        example: Managed by CB-Tumblebug
        type: string
      uid:
        description: Uid is universally unique identifier for the object, used for
          labelSelector
        example: wef12awefadf1221edcf
        type: string
      vNetId:
        type: string
    type: object
  model.SecurityGroupReq:
    properties:
      connectionName:
        type: string
      cspResourceId:
        description: CspResourceId is required to register object from CSP (option=register)
        example: 'required for option=register only. ex: csp-06eb41e14121c550a'
        type: string
      description:
        type: string
      firewallRules:
        description: validate:"required"`
        items:
          $ref: '#/definitions/model.FirewallRuleReq'
        type: array
      name:
        type: string
      vNetId:
        type: string
    required:
    - connectionName
    - name
    - vNetId
    type: object
  model.SimpleMsg:
    properties:
      message:
        example: Any message
        type: string
    type: object
  model.SshKeyInfo:
    properties:
      associatedObjectList:
        items:
          type: string
        type: array
      connectionConfig:
        $ref: '#/definitions/model.ConnConfig'
      connectionName:
        type: string
      cspResourceId:
        description: CspResourceId is resource identifier managed by CSP
        example: csp-06eb41e14121c550a
        type: string
      cspResourceName:
        description: CspResourceName is name assigned to the CSP resource. This name
          is internally used to handle the resource.
        example: we12fawefadf1221edcf
        type: string
      description:
        type: string
      fingerprint:
        type: string
      id:
        description: Id is unique identifier for the object
        example: aws-ap-southeast-1
        type: string
      isAutoGenerated:
        type: boolean
      keyValueList:
        items:
          $ref: '#/definitions/model.KeyValue'
        type: array
      name:
        description: Name is human-readable string to represent the object
        example: aws-ap-southeast-1
        type: string
      privateKey:
        type: string
      publicKey:
        type: string
      resourceType:
        description: ResourceType is the type of the resource
        type: string
      systemLabel:
        description: SystemLabel is for describing the Resource in a keyword (any
          string can be used) for special System purpose
        example: Managed by CB-Tumblebug
        type: string
      uid:
        description: Uid is universally unique identifier for the object, used for
          labelSelector
        example: wef12awefadf1221edcf
        type: string
      username:
        type: string
      verifiedUsername:
        type: string
    type: object
  model.SshKeyReq:
    properties:
      connectionName:
        type: string
      cspResourceId:
        description: |-
          Fields for "Register existing SSH keys" feature
          CspResourceId is required to register object from CSP (option=register)
        type: string
      description:
        type: string
      fingerprint:
        type: string
      name:
        type: string
      privateKey:
        type: string
      publicKey:
        type: string
      username:
        type: string
      verifiedUsername:
        type: string
    required:
    - connectionName
    - name
    type: object
  model.SubnetInfo:
    properties:
      bastionNodes:
        items:
          $ref: '#/definitions/model.BastionNode'
        type: array
      connectionConfig:
        $ref: '#/definitions/model.ConnConfig'
      connectionName:
        type: string
      cspResourceId:
        description: CspResourceId is resource identifier managed by CSP
        example: csp-06eb41e14121c550a
        type: string
      cspResourceName:
        description: CspResourceName is name assigned to the CSP resource. This name
          is internally used to handle the resource.
        example: we12fawefadf1221edcf
        type: string
      cspVNetId:
        description: CspVNetId is vNet resource identifier managed by CSP
        example: csp-45eb41e14121c550a
        type: string
      cspVNetName:
        description: CspVNetName is identifier to handle CSP vNet resource
        example: we12fawefadf1221edcf
        type: string
      description:
        type: string
      id:
        description: Id is unique identifier for the object
        example: aws-ap-southeast-1
        type: string
      ipv4_CIDR:
        type: string
      keyValueList:
        items:
          $ref: '#/definitions/model.KeyValue'
        type: array
      name:
        description: Name is human-readable string to represent the object
        example: aws-ap-southeast-1
        type: string
      resourceType:
        description: ResourceType is the type of the resource
        type: string
      status:
        type: string
      uid:
        description: Uid is universally unique identifier for the object, used for
          labelSelector
        example: wef12awefadf1221edcf
        type: string
      zone:
        type: string
    type: object
  model.SubnetReq:
    properties:
      description:
        example: subnet00 managed by CB-Tumblebug
        type: string
      ipv4_CIDR:
        example: 10.0.1.0/24
        type: string
      name:
        example: subnet00
        type: string
      zone:
        type: string
    required:
    - ipv4_CIDR
    - name
    type: object
  model.VNetInfo:
    properties:
      associatedObjectList:
        items:
          type: string
        type: array
      cidrBlock:
        type: string
      connectionConfig:
        $ref: '#/definitions/model.ConnConfig'
      connectionName:
        type: string
      cspResourceId:
        description: CspResourceId is resource identifier managed by CSP
        example: csp-06eb41e14121c550a
        type: string
      cspResourceName:
        description: CspResourceName is name assigned to the CSP resource. This name
          is internally used to handle the resource.
        example: we12fawefadf1221edcf
        type: string
      description:
        type: string
      id:
        description: Id is unique identifier for the object
        example: aws-ap-southeast-1
        type: string
      isAutoGenerated:
        type: boolean
      keyValueList:
        items:
          $ref: '#/definitions/model.KeyValue'
        type: array
      name:
        description: Name is human-readable string to represent the object
        example: aws-ap-southeast-1
        type: string
      resourceType:
        description: ResourceType is the type of the resource
        type: string
      status:
        type: string
      subnetInfoList:
        items:
          $ref: '#/definitions/model.SubnetInfo'
        type: array
      systemLabel:
        description: SystemLabel is for describing the Resource in a keyword (any
          string can be used) for special System purpose
        example: Managed by CB-Tumblebug
        type: string
      uid:
        description: Uid is universally unique identifier for the object, used for
          labelSelector
        example: wef12awefadf1221edcf
        type: string
    type: object
  model.VNetReq:
    properties:
      cidrBlock:
        example: 10.0.0.0/16
        type: string
      connectionName:
        example: aws-ap-northeast-2
        type: string
      description:
        example: vnet00 managed by CB-Tumblebug
        type: string
      name:
        example: vnet00
        type: string
      subnetInfoList:
        items:
          $ref: '#/definitions/model.SubnetReq'
        type: array
    required:
    - connectionName
    - name
    type: object
  onpremisemodel.CpuProperty:
    properties:
      architecture:
        example: x86_64
        type: string
      cores:
        description: Number of physical cores per CPU
        example: 18
        type: integer
      cpus:
        description: Number of physical CPUs (sockets)
        example: 2
        type: integer
      maxSpeed:
        description: Maximum speed in GHz
        example: 3.6
        type: number
      model:
        example: Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz
        type: string
      threads:
        description: Number of logical CPUs (threads) per CPU with hyper-threading
          enabled
        example: 36
        type: integer
      vendor:
        example: GenuineIntel
        type: string
    required:
    - cores
    - cpus
    - threads
    type: object
  onpremisemodel.DiskProperty:
    properties:
      available:
        description: Unit GiB
        type: integer
      label:
        type: string
      totalSize:
        description: Unit GiB
        example: 1024
        type: integer
      type:
        description: SSD, HDD
        example: SSD
        type: string
      used:
        description: Unit GiB
        type: integer
    required:
    - label
    - totalSize
    - type
    type: object
  onpremisemodel.FirewallRuleProperty:
    properties:
      action:
        description: e.g., allow, deny
        type: string
      direction:
        description: e.g., inbound, outbound
        type: string
      dstCIDR:
        description: e.g., "123.123.123.123/32", "123.123.123.123/24", "0.0.0.0/0"
        type: string
      dstPorts:
        description: e.g., "80", "80,443", "1024-65535", "*" (for all ports)
        type: string
      protocol:
        description: e.g., "TCP", "UDP", "ICMP", "*" (for all protocol)
        type: string
      srcCIDR:
        description: e.g., "123.123.123.123/32", "123.123.123.123/24", "0.0.0.0/0"
        type: string
      srcPorts:
        description: e.g., "80", "80,443", "1024-65535", "*" (for all ports)
        type: string
    type: object
  onpremisemodel.GatewayProperty:
    properties:
      interfaceName:
        description: Name of the network interface associated with the gateway
        type: string
      ip:
        description: IP address of the gateway
        type: string
      machineId:
        description: Unique identifier for the machine (e.g., UUID)
        type: string
    type: object
  onpremisemodel.MemoryProperty:
    properties:
      available:
        description: Unit GiB
        type: integer
      totalSize:
        description: Unit GiB
        example: 128
        type: integer
      type:
        example: DDR4
        type: string
      used:
        description: Unit GiB
        type: integer
    required:
    - totalSize
    - type
    type: object
  onpremisemodel.NetworkDetail:
    properties:
      cidrBlocks:
        items:
          type: string
        type: array
      defaultGateways:
        items:
          $ref: '#/definitions/onpremisemodel.GatewayProperty'
        type: array
    type: object
  onpremisemodel.NetworkInterfaceProperty:
    properties:
      ipv4CidrBlocks:
        description: IPv4 address with prefix length (e.g., 192.168.0.21/24), instead
          of inet addr, Bcast, and Mask
        items:
          type: string
        type: array
      ipv6CidrBlocks:
        description: IPv6 address with prefix length (e.g., "2001:db8::1/64")
        items:
          type: string
        type: array
      macAddress:
        description: MAC address
        type: string
      mtu:
        description: Maximum Transmission Unit (MTU) in bytes
        type: integer
      name:
        description: Interface name (e.g., eth0, ens01, enp0s3)
        type: string
      state:
        description: Interface state (e.g., UP, DOWN)
        type: string
    required:
    - name
    type: object
  onpremisemodel.NetworkProperty:
    properties:
      ipv4Networks:
        $ref: '#/definitions/onpremisemodel.NetworkDetail'
      ipv6Networks:
        allOf:
        - $ref: '#/definitions/onpremisemodel.NetworkDetail'
        description: TBD
    type: object
  onpremisemodel.OnpremInfra:
    properties:
      network:
        $ref: '#/definitions/onpremisemodel.NetworkProperty'
      servers:
        items:
          $ref: '#/definitions/onpremisemodel.ServerProperty'
        type: array
    required:
    - servers
    type: object
  onpremisemodel.OsProperty:
    properties:
      id:
        example: ubuntu
        type: string
      idLike:
        example: debian
        type: string
      name:
        example: Ubuntu
        type: string
      prettyName:
        description: Pretty name
        example: Ubuntu 22.04.3 LTS
        type: string
      version:
        description: Full version string
        example: 22.04.3 LTS (Jammy Jellyfish)
        type: string
      versionCodename:
        example: jammy
        type: string
      versionId:
        example: "22.04"
        type: string
    required:
    - prettyName
    type: object
  onpremisemodel.RouteProperty:
    properties:
      destination:
        description: Destination network, expressed in CIDR format
        type: string
      gateway:
        description: Gateway address to which packets are forwarded
        type: string
      interface:
        description: Network interface associated with the route
        type: string
      linkState:
        description: Link state of the route (e.g., UP, DOWN)
        type: string
      metric:
        description: Metric value indicating the priority of the route
        type: integer
      protocol:
        description: Protocol used to set the route (e.g., kernel, static)
        type: string
      scope:
        description: Scope of the route (e.g., global, link, host)
        type: string
      source:
        description: Optionally stores the source address (used for policy-based routing)
        type: string
    type: object
  onpremisemodel.ServerProperty:
    properties:
      cpu:
        $ref: '#/definitions/onpremisemodel.CpuProperty'
      dataDisks:
        items:
          $ref: '#/definitions/onpremisemodel.DiskProperty'
        type: array
      firewallTable:
        items:
          $ref: '#/definitions/onpremisemodel.FirewallRuleProperty'
        type: array
      hostname:
        type: string
      interfaces:
        items:
          $ref: '#/definitions/onpremisemodel.NetworkInterfaceProperty'
        type: array
      machineId:
        description: Unique identifier for the server (e.g., UUID)
        type: string
      memory:
        $ref: '#/definitions/onpremisemodel.MemoryProperty'
      os:
        $ref: '#/definitions/onpremisemodel.OsProperty'
      rootDisk:
        $ref: '#/definitions/onpremisemodel.DiskProperty'
      routingTable:
        items:
          $ref: '#/definitions/onpremisemodel.RouteProperty'
        type: array
    type: object
  resource.RestGetAllSecurityGroupResponse:
    properties:
      securityGroup:
        items:
          $ref: '#/definitions/model.SecurityGroupInfo'
        type: array
    type: object
  resource.RestGetAllSshKeyResponse:
    properties:
      sshKey:
        items:
          $ref: '#/definitions/model.SshKeyInfo'
        type: array
    type: object
  resource.RestGetAllVNetResponse:
    properties:
      vNet:
        items:
          $ref: '#/definitions/model.VNetInfo'
        type: array
    type: object
  transx.DataMigrationModel:
    properties:
      destination:
        allOf:
        - $ref: '#/definitions/transx.EndpointDetails'
        description: Destination endpoint configuration
      destinationTransferOptions:
        allOf:
        - $ref: '#/definitions/transx.TransferOptions'
        description: Destination-specific transfer options
      source:
        allOf:
        - $ref: '#/definitions/transx.EndpointDetails'
        description: Source endpoint configuration
      sourceTransferOptions:
        allOf:
        - $ref: '#/definitions/transx.TransferOptions'
        description: Source-specific transfer options
    required:
    - destination
    - destinationTransferOptions
    - source
    - sourceTransferOptions
    type: object
  transx.EndpointDetails:
    properties:
      backupCmd:
        description: Command execution
        type: string
      dataPath:
        description: Data location (required)
        type: string
      endpoint:
        description: Endpoint configuration (auto-detects protocol based on provided
          fields)
        type: string
      port:
        description: 'Port for SSH host/IP (default: 22) or Object Storage API endpoint
          (default: 1024)'
        type: integer
      restoreCmd:
        description: Restore command string to be executed on this endpoint
        type: string
    required:
    - dataPath
    type: object
  transx.ObjectStorageTransferOption:
    properties:
      accessKeyId:
        description: AWS S3 Authentication (REQUIRED - must be provided by user)
        type: string
      expiresIn:
        default: 3600
        description: Presigned URL configuration
        type: integer
      maxRetries:
        default: 3
        description: 'Maximum number of retry attempts (default: 3)'
        type: integer
      timeout:
        default: 300
        description: HTTP request configuration (optional)
        type: integer
      verifySSL:
        default: false
        description: 'Verify SSL certificates (CB-Spider default: false)'
        type: boolean
    required:
    - accessKeyId
    type: object
  transx.RsyncOption:
    properties:
      archive:
        default: true
        description: '-a, --archive: Archive mode; equals -rlptgoD (no -H,-A,-X)'
        type: boolean
      compress:
        default: true
        description: Rsync-specific options
        type: boolean
      connectTimeout:
        default: 30
        description: SSH connection timeout in seconds
        type: integer
      delete:
        default: false
        description: '--delete: Delete extraneous files from dest dirs'
        type: boolean
      dryRun:
        default: false
        description: Perform a trial run with no changes made
        type: boolean
      exclude:
        description: '--exclude=PATTERN: List of patterns to exclude'
        items:
          type: string
        type: array
      include:
        description: '--include=PATTERN: List of patterns to include'
        items:
          type: string
        type: array
      insecureSkipHostKeyVerification:
        default: false
        description: |-
          InsecureSkipHostKeyVerification, if true, relaxes host key checking for SSH connections.
          Adds "-o StrictHostKeyChecking=accept-new -o UserKnownHostsFile=/dev/null" options.
          Warning: This can be a security risk and should only be used in trusted environments.
        type: boolean
      progress:
        default: false
        description: Show progress during transfer
        type: boolean
      rsyncPath:
        default: rsync
        description: Path to the rsync executable (if empty, uses system PATH)
        type: string
      sshPrivateKeyPath:
        description: SSH private key path
        type: string
      transferDirContentsOnly:
        default: false
        description: |-
          TransferDirContentsOnly, if true, adds a trailing slash to source paths
          to transfer only the contents of the directory and not the directory itself.
        type: boolean
      username:
        description: SSH connection & authentication options (integrated)
        type: string
      verbose:
        default: false
        description: Transfer behavior options
        type: boolean
    type: object
  transx.TransferOptions:
    properties:
      method:
        description: Transfer method specification (required)
        type: string
      objectStorageTransferOptions:
        allOf:
        - $ref: '#/definitions/transx.ObjectStorageTransferOption'
        description: Object Storage-specific options (CB-Spider, AWS S3, etc.)
      rsyncOptions:
        allOf:
        - $ref: '#/definitions/transx.RsyncOption'
        description: Rsync-specific options
    required:
    - method
    type: object
externalDocs:
  description: ▶▶▶ CB-Tumblebug REST API (access via Beetle's reverse proxy)
  url: http://localhost:8056/tumblebug/api/index.html
host: localhost:8056
info:
  contact:
    name: API Support
    url: https://github.com/cloud-barista/cm-beetle/issues/new/choose
  description: CM-Beetle REST API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: CM-Beetle REST API
  version: latest
paths:
  /httpVersion:
    get:
      consumes:
      - application/json
      description: Checks and logs the HTTP version of the incoming request to the
        server console.
      operationId: CheckHTTPVersion
      parameters:
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SimpleMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.SimpleMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.SimpleMessage'
      summary: Check HTTP version of incoming request
      tags:
      - '[Admin] System management'
  /migration/data:
    post:
      consumes:
      - application/json
      description: |-
        Migrate data from source to target

        * Only relay mode is supported for now (both source and destination should be remote endpoints).
        * Supported methods: rsync, object storage API (AWS S3 style)
        * Examples: https://github.com/yunkon-kim/transx?tab=readme-ov-file#examples
      operationId: MigrateData
      parameters:
      - description: Request Body
        in: body
        name: reqBody
        required: true
        schema:
          $ref: '#/definitions/transx.DataMigrationModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.SimpleMsg'
      summary: Migrate data from source to target
      tags:
      - '[Migration] Data (experimental)'
  /migration/ns/{nsId}/mci:
    get:
      consumes:
      - application/json
      description: Get the migrated multi-cloud infrastructure (MCI)
      operationId: ListInfra
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - description: Option for getting the migrated multi-cloud infrastructure
        enum:
        - id
        in: query
        name: option
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The ID list of The migrated multi-cloud infrastructure (MCI)
          schema:
            $ref: '#/definitions/cloudmodel.IdList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
      summary: Get the migrated multi-cloud infrastructure (MCI)
      tags:
      - '[Migration] Infrastructure'
    post:
      consumes:
      - application/json
      description: Migrate an infrastructure to the multi-cloud infrastructure (MCI)
        with defaults.
      operationId: MigrateInfra
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - description: Specify the information for the targeted mulci-cloud infrastructure
          (MCI)
        in: body
        name: mciInfo
        required: true
        schema:
          $ref: '#/definitions/controller.MigrateInfraRequest'
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated to the multi-cloud infrastructure
          schema:
            $ref: '#/definitions/controller.MigrateInfraResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
      summary: Migrate an infrastructure to the multi-cloud infrastructure (MCI) with
        defaults
      tags:
      - '[Migration] Infrastructure'
  /migration/ns/{nsId}/mci/{mciId}:
    delete:
      consumes:
      - application/json
      description: Delete the migrated mult-cloud infrastructure (MCI)
      operationId: DeleteInfra
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - default: mmci01
        description: Migrated Multi-Cloud Infrastructure (MCI) ID
        in: path
        name: mciId
        required: true
        type: string
      - default: terminate
        description: Option for deletion
        enum:
        - terminate
        - force
        in: query
        name: option
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The result of deleting the migrated multi-cloud infrastructure
            (MCI)
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
      summary: Delete the migrated mult-cloud infrastructure (MCI)
      tags:
      - '[Migration] Infrastructure'
    get:
      consumes:
      - application/json
      description: Get the migrated multi-cloud infrastructure (MCI)
      operationId: GetInfra
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - default: mmci01
        description: Migrated Multi-Cloud Infrastructure (MCI) ID
        in: path
        name: mciId
        required: true
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The migrated multi-cloud infrastructure (MCI) information
          schema:
            $ref: '#/definitions/controller.MigrateInfraResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
      summary: Get the migrated multi-cloud infrastructure (MCI)
      tags:
      - '[Migration] Infrastructure'
  /migration/ns/{nsId}/mciWithDefaults:
    post:
      consumes:
      - application/json
      description: Migrate an infrastructure to the multi-cloud infrastructure (MCI)
        with defaults.
      operationId: MigrateInfraWithDefaults
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - description: Specify the information for the targeted mulci-cloud infrastructure
          (MCI)
        in: body
        name: mciInfo
        required: true
        schema:
          $ref: '#/definitions/controller.MigrateInfraWithDefaultsRequest'
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated to the multi-cloud infrastructure
          schema:
            $ref: '#/definitions/controller.MigrateInfraWithDefaultsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-beetle_pkg_api_rest_model_beetle.Response'
      summary: Migrate an infrastructure to the multi-cloud infrastructure (MCI) with
        defaults
      tags:
      - '[Migration] Infrastructure'
  /migration/ns/{nsId}/resources/securityGroup:
    delete:
      consumes:
      - application/json
      description: Delete multiple migrated security groups in the namespace
      operationId: DeleteMigratedSecurityGroups
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - default: ""
        description: Delete resources containing matched ID-substring only
        in: query
        name: match
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.IdList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Delete multiple migrated security groups
      tags:
      - '[Migration] Resources for VM infrastructure'
    get:
      consumes:
      - application/json
      description: Get the list of all migrated security groups in the namespace
      operationId: ListMigratedSecurityGroups
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - description: Option
        enum:
        - id
        in: query
        name: option
        type: string
      - description: 'Field key for filtering (ex: systemLabel)'
        in: query
        name: filterKey
        type: string
      - description: 'Field value for filtering (ex: Registered from CSP resource)'
        in: query
        name: filterVal
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Different return structures by the given option param
          schema:
            allOf:
            - $ref: '#/definitions/controller.JSONResult'
            - properties:
                '[DEFAULT]':
                  $ref: '#/definitions/resource.RestGetAllSecurityGroupResponse'
                '[ID]':
                  $ref: '#/definitions/model.IdList'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: List all migrated security groups
      tags:
      - '[Migration] Resources for VM infrastructure'
    post:
      consumes:
      - application/json
      description: Create a new migrated security group in the namespace
      operationId: CreateMigratedSecurityGroup
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - description: 'Option: [required params for register] connectionName, name,
          vNetId, cspResourceId'
        enum:
        - register
        in: query
        name: option
        type: string
      - description: Details for an securityGroup object
        in: body
        name: securityGroupReq
        required: true
        schema:
          $ref: '#/definitions/model.SecurityGroupReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SecurityGroupInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Create a migrated security group
      tags:
      - '[Migration] Resources for VM infrastructure'
  /migration/ns/{nsId}/resources/securityGroup/{sgId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific migrated security group in the namespace
      operationId: DeleteMigratedSecurityGroup
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - default: mig-sg-01
        description: Security Group ID
        in: path
        name: sgId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Delete a migrated security group
      tags:
      - '[Migration] Resources for VM infrastructure'
    get:
      consumes:
      - application/json
      description: Get details of a specific migrated security group in the namespace
      operationId: GetMigratedSecurityGroup
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - default: mig-sg-01
        description: Security Group ID
        in: path
        name: sgId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SecurityGroupInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Get a specific migrated security group
      tags:
      - '[Migration] Resources for VM infrastructure'
  /migration/ns/{nsId}/resources/sshKey:
    get:
      consumes:
      - application/json
      description: Get the list of all migrated SSH keys in the namespace
      operationId: ListMigratedSSHKeys
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - description: Option
        enum:
        - id
        in: query
        name: option
        type: string
      - description: 'Field key for filtering (ex: systemLabel)'
        in: query
        name: filterKey
        type: string
      - description: 'Field value for filtering (ex: Registered from CSP resource)'
        in: query
        name: filterVal
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Different return structures by the given option param
          schema:
            allOf:
            - $ref: '#/definitions/controller.JSONResult'
            - properties:
                '[DEFAULT]':
                  $ref: '#/definitions/resource.RestGetAllSshKeyResponse'
                '[ID]':
                  $ref: '#/definitions/model.IdList'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: List all migrated SSH keys
      tags:
      - '[Migration] Resources for VM infrastructure'
    post:
      consumes:
      - application/json
      description: Create a new migrated SSH key in the namespace
      operationId: CreateMigratedSSHKey
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - description: 'Option: [required params for register] connectionName, name,
          cspKeyId'
        enum:
        - register
        in: query
        name: option
        type: string
      - description: Details for an SSH key object
        in: body
        name: sshKeyReq
        required: true
        schema:
          $ref: '#/definitions/model.SshKeyReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SshKeyInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Create a migrated SSH key
      tags:
      - '[Migration] Resources for VM infrastructure'
  /migration/ns/{nsId}/resources/sshKey/{sshKeyId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific migrated SSH key in the namespace
      operationId: DeleteMigratedSSHKey
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - default: mig-sshkey-01
        description: SSH Key ID
        in: path
        name: sshKeyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Delete a migrated SSH key
      tags:
      - '[Migration] Resources for VM infrastructure'
    get:
      consumes:
      - application/json
      description: Get details of a specific migrated SSH key in the namespace
      operationId: GetMigratedSSHKey
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - default: mig-sshkey-01
        description: SSH Key ID
        in: path
        name: sshKeyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SshKeyInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Get a specific migrated SSH key
      tags:
      - '[Migration] Resources for VM infrastructure'
  /migration/ns/{nsId}/resources/vNet:
    get:
      consumes:
      - application/json
      description: Get the list of all migrated virtual networks in the namespace
      operationId: ListMigratedVNets
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Different return structures by the given option param
          schema:
            allOf:
            - $ref: '#/definitions/controller.JSONResult'
            - properties:
                '[DEFAULT]':
                  $ref: '#/definitions/resource.RestGetAllVNetResponse'
                '[ID]':
                  $ref: '#/definitions/model.IdList'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: List all migrated virtual networks
      tags:
      - '[Migration] Resources for VM infrastructure'
    post:
      consumes:
      - application/json
      description: Create a new migrated virtual network in the namespace
      operationId: CreateVNet
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - description: Virtual Network creation request
        in: body
        name: vNetReq
        required: true
        schema:
          $ref: '#/definitions/model.VNetReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.VNetInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Create a migrated virtual network
      tags:
      - '[Migration] Resources for VM infrastructure'
  /migration/ns/{nsId}/resources/vNet/{vNetId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific migrated virtual network in the namespace
      operationId: DeleteMigratedVNet
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - default: mig-vnet-01
        description: Virtual Network ID
        in: path
        name: vNetId
        required: true
        type: string
      - description: Action
        enum:
        - withsubnets
        - refine
        - force
        in: query
        name: action
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Delete a migrated virtual network
      tags:
      - '[Migration] Resources for VM infrastructure'
    get:
      consumes:
      - application/json
      description: Get details of a specific virtual network in the namespace
      operationId: GetMigratedVNet
      parameters:
      - default: mig01
        description: Namespace ID
        in: path
        name: nsId
        required: true
        type: string
      - default: mig-vnet-01
        description: Virtual Network ID
        in: path
        name: vNetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.VNetInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.SimpleMsg'
      summary: Get a specific migrated virtual network
      tags:
      - '[Migration] Resources for VM infrastructure'
  /readyz:
    get:
      consumes:
      - application/json
      description: Check Beetle is ready
      operationId: GetReadyz
      parameters:
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SimpleMessage'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/common.SimpleMessage'
      summary: Check Beetle is ready
      tags:
      - '[Admin] System management'
  /recommendation/containerInfra:
    post:
      consumes:
      - application/json
      description: |-
        Recommend an appropriate container infrastructure for container-based workloads

        [Note] `desiredProvider` and `desiredRegion` are required.
        - `desiredProvider` and `desiredRegion` can be set in the query parameter or the request body.
        - If both are set, the values in the request body take precedence.
      operationId: RecommendContainerInfra
      parameters:
      - description: Specify the source container infrastructure
        in: body
        name: UserInfra
        required: true
        schema:
          $ref: '#/definitions/controller.RecommendInfraRequest'
      - default: aws
        description: Provider (e.g., aws, azure, gcp)
        enum:
        - aws
        - azure
        - gcp
        - alibaba
        - ncp
        in: query
        name: desiredProvider
        type: string
      - default: ap-northeast-2
        description: Region (e.g., ap-northeast-2)
        in: query
        name: desiredRegion
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The result of recommended container infrastructure
          schema:
            $ref: '#/definitions/controller.RecommendInfraResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.SimpleMsg'
      summary: (Under-development) Recommend an appropriate container infrastructure
        for cloud migration
      tags:
      - '[Recommendation] Infrastructure'
  /recommendation/mci:
    post:
      consumes:
      - application/json
      description: |-
        Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) for cloud migration

        [Note] `desiredCsp` and `desiredRegion` are required.
        - `desiredCsp` and `desiredRegion` can set on the query parameter or the request body.

        - If desiredCsp and desiredRegion are set on request body, the values in the query parameter will be ignored.
      operationId: RecommendVMInfra
      parameters:
      - description: Specify the your infrastructure to be migrated
        in: body
        name: UserInfra
        required: true
        schema:
          $ref: '#/definitions/controller.RecommendVmInfraRequest'
      - default: aws
        description: Provider (e.g., aws, azure, gcp)
        enum:
        - aws
        - azure
        - gcp
        - alibaba
        - ncp
        in: query
        name: desiredCsp
        type: string
      - default: ap-northeast-2
        description: Region (e.g., ap-northeast-2)
        in: query
        name: desiredRegion
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The result of recommended infrastructure
          schema:
            $ref: '#/definitions/controller.RecommendVmInfraResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.SimpleMsg'
      summary: Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud
        infrastructure) for cloud migration
      tags:
      - '[Recommendation] Infrastructure'
  /recommendation/mciWithDefaults:
    post:
      consumes:
      - application/json
      description: |-
        Recommend an appropriate VM infrastructure (i.e., MCI, multi-cloud infrastructure) with defaults for cloud migration

        [Note] `desiredCsp` and `desiredRegion` are required.
        - `desiredCsp` and `desiredRegion` can set on the query parameter or the request body.

        - If desiredCsp and desiredRegion are set on request body, the values in the query parameter will be ignored.
      operationId: RecommendVMInfraWithDefaults
      parameters:
      - description: Specify the your infrastructure to be migrated
        in: body
        name: UserInfra
        required: true
        schema:
          $ref: '#/definitions/controller.RecommendVmInfraWithDefaultsRequest'
      - default: aws
        description: Provider (e.g., aws, azure, gcp)
        enum:
        - aws
        - azure
        - gcp
        - alibaba
        - ncp
        in: query
        name: desiredCsp
        type: string
      - default: ap-northeast-2
        description: Region (e.g., ap-northeast-2)
        in: query
        name: desiredRegion
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The result of recommended infrastructure
          schema:
            $ref: '#/definitions/controller.RecommendVmInfraWithDefaultsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.SimpleMsg'
      summary: (To be updated) Recommend an appropriate VM infrastructure (i.e., MCI,
        multi-cloud infrastructure) with defaults for cloud migration
      tags:
      - '[Recommendation] Infrastructure'
  /recommendation/resources/securityGroups:
    post:
      consumes:
      - application/json
      description: |-
        Recommend an appropriate security group for cloud migration

        [Note] `desiredProvider` and `desiredRegion` are required.
        - `desiredProvider` and `desiredRegion` can set on the query parameter or the request body.

        - If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.
      operationId: RecommendSecurityGroups
      parameters:
      - description: Specify the your infrastructure to be migrated
        in: body
        name: UserInfra
        required: true
        schema:
          $ref: '#/definitions/controller.RecommendVmInfraRequest'
      - default: aws
        description: Provider (e.g., aws, azure, gcp)
        enum:
        - aws
        - azure
        - gcp
        - alibaba
        - ncp
        in: query
        name: desiredProvider
        type: string
      - default: ap-northeast-2
        description: Region (e.g., ap-northeast-2)
        in: query
        name: desiredRegion
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The result of recommended security groups
          schema:
            $ref: '#/definitions/controller.RecommendSecurityGroupResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.SimpleMsg'
      summary: Recommend an appropriate security group for cloud migration
      tags:
      - '[Recommendation] Resources for VM infrastructure'
  /recommendation/resources/vNet:
    post:
      consumes:
      - application/json
      description: |-
        Recommend an appropriate virtual network for cloud migration

        [Note] `desiredProvider` and `desiredRegion` are required.
        - `desiredProvider` and `desiredRegion` can set on the query parameter or the request body.

        - If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.
      operationId: RecommendVNet
      parameters:
      - description: Specify the your infrastructure to be migrated
        in: body
        name: UserInfra
        required: true
        schema:
          $ref: '#/definitions/controller.RecommendVmInfraRequest'
      - default: aws
        description: Provider (e.g., aws, azure, gcp)
        enum:
        - aws
        - azure
        - gcp
        - alibaba
        - ncp
        in: query
        name: desiredProvider
        type: string
      - default: ap-northeast-2
        description: Region (e.g., ap-northeast-2)
        in: query
        name: desiredRegion
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The result of recommended vNet
          schema:
            $ref: '#/definitions/controller.RecommendVNetResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.SimpleMsg'
      summary: Recommend an appropriate virtual network for cloud migration
      tags:
      - '[Recommendation] Resources for VM infrastructure'
  /recommendation/resources/vmOsImages:
    post:
      consumes:
      - application/json
      description: |-
        Recommend an appropriate OS image for cloud migration

        [Note] `desiredProvider` and `desiredRegion` are required.
        - `desiredProvider` and `desiredRegion` can set on the query parameter or the request body.

        - If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.
      operationId: RecommendVmOsImages
      parameters:
      - description: Specify the your infrastructure to be migrated
        in: body
        name: UserInfra
        required: true
        schema:
          $ref: '#/definitions/controller.RecommendVmInfraRequest'
      - default: aws
        description: Provider (e.g., aws, azure, gcp)
        enum:
        - aws
        - azure
        - gcp
        - alibaba
        - ncp
        in: query
        name: desiredProvider
        type: string
      - default: ap-northeast-2
        description: Region (e.g., ap-northeast-2)
        in: query
        name: desiredRegion
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The result of recommended VM OS images
          schema:
            $ref: '#/definitions/controller.RecommendVmOsImageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.SimpleMsg'
      summary: Recommend an appropriate OS image for cloud migration
      tags:
      - '[Recommendation] Resources for VM infrastructure'
  /recommendation/resources/vmSpecs:
    post:
      consumes:
      - application/json
      description: |-
        Recommend an appropriate VM specification for cloud migration

        [Note] `desiredProvider` and `desiredRegion` are required.
        - `desiredProvider` and `desiredRegion` can set on the query parameter or the request body.

        - If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored.
        - If `targetMachineId` is provided, only that specific machine will be processed.
      operationId: RecommendVmSpecs
      parameters:
      - description: Specify the your infrastructure to be migrated
        in: body
        name: UserInfra
        required: true
        schema:
          $ref: '#/definitions/controller.RecommendVmInfraRequest'
      - default: aws
        description: Provider (e.g., aws, azure, gcp)
        enum:
        - aws
        - azure
        - gcp
        - alibaba
        - ncp
        in: query
        name: desiredProvider
        type: string
      - default: ap-northeast-2
        description: Region (e.g., ap-northeast-2)
        in: query
        name: desiredRegion
        type: string
      - description: Target Machine ID to focus recommendation on (optional)
        in: query
        name: targetMachineId
        type: string
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The result of recommended VM specifications
          schema:
            $ref: '#/definitions/controller.RecommendVmSpecResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.SimpleMsg'
      summary: Recommend an appropriate VM specification for cloud migration
      tags:
      - '[Recommendation] Resources for VM infrastructure'
  /test/tracing:
    get:
      consumes:
      - application/json
      description: Test tracing to Tumblebug
      operationId: TestTracing
      parameters:
      - description: 'Custom request ID (NOTE: It will be used as a trace ID.)'
        in: header
        name: X-Request-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SimpleMessage'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/common.SimpleMessage'
      summary: Test tracing to Tumblebug
      tags:
      - '[Test] Utility'
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
